[{"id":"a4e213fd662c6a91","type":"tab","label":"OBS","disabled":false,"info":""},{"id":"82977e09dd59d843","type":"comment","z":"a4e213fd662c6a91","name":"Publish Message","info":"","x":120,"y":420,"wires":[]},{"id":"7dda473681979bef","type":"comment","z":"a4e213fd662c6a91","name":"When OBS Connects to MQTT Broker","info":"","x":190,"y":240,"wires":[]},{"id":"1cb0162d5c1ec0a2","type":"comment","z":"a4e213fd662c6a91","name":"Subscribe Message","info":"","x":130,"y":200,"wires":[]},{"id":"86b6c1d7c8f91166","type":"comment","z":"a4e213fd662c6a91","name":"Libs using","info":"node-red-dashboard\nnode-red-node-ui-table\n","x":100,"y":60,"wires":[]},{"id":"a6dd7829dbec46db","type":"inject","z":"a4e213fd662c6a91","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"${PAYLOAD_CONFIG_STATUS}","payloadType":"str","x":130,"y":480,"wires":[["14b44aff4c7e76ac"]]},{"id":"14b44aff4c7e76ac","type":"mqtt out","z":"a4e213fd662c6a91","name":"CONFIG_STATUS","topic":"aemr80001/config/status","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"77f3627e6c372d80","x":430,"y":480,"wires":[]},{"id":"d2e44e5b694570a8","type":"inject","z":"a4e213fd662c6a91","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"${PAYLOAD_CONFIG_COMMAND_RESULT}","payloadType":"str","x":130,"y":540,"wires":[["e0074c0f8d3b82e0"]]},{"id":"e0074c0f8d3b82e0","type":"mqtt out","z":"a4e213fd662c6a91","name":"CONFIG_COMMAND_RESULT","topic":"aemr80001/config/command_result","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"77f3627e6c372d80","x":470,"y":540,"wires":[]},{"id":"3b93df83327fc3af","type":"complete","z":"a4e213fd662c6a91","name":"","scope":["562be4a339e1a7c2"],"uncaught":false,"x":110,"y":660,"wires":[["dd462a5854987ce5","af9295d56b2786e1"]]},{"id":"9f2367d4cfab42b9","type":"function","z":"a4e213fd662c6a91","d":true,"name":"","func":"var command = JSON.parse(msg.payload);//get HVAC COMMAND\nvar status = JSON.parse(env.get(\"payload_HVAC_STATUS\"));// get HVAC STATUS\nvar listTemperature = [];// TemperatureList all\nvar arrays = [];// TemperatureList change in HVAC COMMAND\n// get TemperatureList in HVAC_STATUS\nvoid function getTemperatureList() {\n  for (let j = 0; j < status.length; j++) {\n    listTemperature = status[j].temperatureList;\n  }\n}();\n// change TemperatureList in HVAC_STATUS\nvoid function changeItemsTemperatureList() {\n  for (let a = 0; a < command.length; a++) {\n  change(command[a].temperatureList, command[a].commandId);\n  }\n}();\n//  change items in  TemperatureList\nfunction change(array, commandId) {\n  var temps = [];\n  for (let i = 0; i < array.length; i++) {\n    if(array[i].temperature <20||array[i].temperature>24)\n    {\n      for (let c = 0; c < status.length; c++) {\n      status[c].result = 1;     // add result to array \n      status[c].failedItems = [{\"carId\":command[0].temperatureList[0].carId,\"reason\":2}];\n      status[c].commandId = commandId; // add commandId to array \n      status[c].ts= getdate();\n\n    }\n    }\n    else if(indexObjetcs(array[i])==-1)\n    {\n      for (let d = 0; d < status.length; d++) {\n      status[d].result = 1;     // add result to array \n      status[d].failedItems = [{\"carId\":command[0].temperatureList[0].carId,\"reason\":3}];\n      status[d].commandId = commandId; // add commandId to array \n      status[d].ts= getdate();\n    }\n    }\n    else\n    {\n        var index = indexObjetcs(array[i]);// get index objects want change\n        listTemperature[index] = array[i];//  change items\n        for (let j = 0; j < status.length; j++) {\n          status[j].temperatureList = listTemperature;      // change TemperatureList in HVAC_STATUS\n          status[j].result = 0;     // add result to array \n          status[j].failedItems = [{\"carId\":command[0].temperatureList[0].carId,\"reason\":1}];\n          status[j].commandId = commandId; // add commandId to array \n          status[j].ts= getdate();\n        }   \n    }\n  }\n  var temp = JSON.stringify(status); // convert items to string\n  temps.push(JSON.parse(temp)); // push items to temsp array \n  // convert temps to json \n  for (let a = 0; a < temps.length; a++) {\n    arrays.push(temps[a][0]);\n\n  }\n}\n// get index objects\nfunction indexObjetcs(array) {\n  var index = listTemperature.findIndex(x => x.carId === array.carId);\n  return index;\n}\nfunction getdate(){\n    let date_ob = new Date();\n\n// adjust 0 before single digit date\nlet date = (\"0\" + date_ob.getDate()).slice(-2);\n\n// current month\nlet month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n\n// current year\nlet year = date_ob.getFullYear();\n\n// current hours\nlet hours = date_ob.getHours();\n\n// current minutes\nlet minutes = date_ob.getMinutes();\n\n// current seconds\nlet seconds = date_ob.getSeconds();\nlet millisecond = date_ob.getMilliseconds();\n\n// prints date & time in YYYY-MM-DD HH:MM:SS format\n    return (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds + \".\"+ millisecond);\n}\nmsg.payload = JSON.stringify(arrays);\nvar count = flow.get ('count') || 0;\nflow.set ('count', msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":140,"y":580,"wires":[[]]},{"id":"dd462a5854987ce5","type":"function","z":"a4e213fd662c6a91","name":"Get payload command result ","func":"msg.payload = env.get(\"PAYLOAD_CONFIG_COMMAND_RESULT\");\nnode.send(msg);\n\n\n\n        \n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":620,"wires":[["0a8f963541eb8a2b"]]},{"id":"0a8f963541eb8a2b","type":"function","z":"a4e213fd662c6a91","name":"Set payload command result","func":"//set global commandId \nvar counts=global.get('counts') || 1;\n\nvar command = JSON.parse(msg.payload);\nfor (let j = 0; j < command.length; j++) {\n  command[j].ts = getTime();\n  command[j].commandId = counts;\n  command[j].result = 1;\n  command[j].failedItems = [null,null];\n}\n\n\nfunction getTime() {\n  let date_ob = new Date();\n  // adjust 0 before single digit date\n  let date = (\"0\" + date_ob.getDate()).slice(-2);\n  // current month\n  let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n  // current year\n  let year = date_ob.getFullYear();\n  // current hours\n  let hours = date_ob.getHours();\n  // current minutes\n  let minutes = date_ob.getMinutes();\n  // current seconds\n  let seconds = date_ob.getSeconds();\n  let millisecond = date_ob.getMilliseconds();\n  // prints date & time in YYYY-MM-DD HH:MM:SS format\n  return (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds + \".\" + millisecond);\n}\nmsg.payload=command;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":620,"wires":[["7b326403be9bf998"]]},{"id":"af9295d56b2786e1","type":"function","z":"a4e213fd662c6a91","name":"Get message","func":"msg.payload =(\"Validate and update configuration\");\nnode.send(msg);\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":700,"wires":[["efd09c9a5e8cfd63"]]},{"id":"efd09c9a5e8cfd63","type":"ui_toast","z":"a4e213fd662c6a91","position":"top right","displayTime":"3","highlight":"","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"","name":"","x":530,"y":700,"wires":[]},{"id":"7b326403be9bf998","type":"mqtt out","z":"a4e213fd662c6a91","name":"CONFIG_COMMAND_RESULT","topic":"aemr80001/config/command_result","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"77f3627e6c372d80","x":850,"y":680,"wires":[]},{"id":"c740731b50d75f44","type":"mqtt in","z":"a4e213fd662c6a91","name":"SUBSCRIBE(+/config/command)","topic":"${TOPIC_CONFIG_COMMAND}","qos":"1","datatype":"auto","broker":"77f3627e6c372d80","nl":false,"rap":true,"rh":0,"x":170,"y":280,"wires":[["562be4a339e1a7c2","6d9d21ee30455c36"]]},{"id":"562be4a339e1a7c2","type":"debug","z":"a4e213fd662c6a91","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":490,"y":280,"wires":[]},{"id":"6d9d21ee30455c36","type":"function","z":"a4e213fd662c6a91","name":"Json parse","func":"node.warn(JSON.parse(msg.payload));\nmsg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":320,"wires":[["ee7766c06f2cc29c"]]},{"id":"ee7766c06f2cc29c","type":"ui_template","z":"a4e213fd662c6a91","group":"a4508689.5e23c8","name":"","order":4,"width":0,"height":0,"format":"{{msg.payload}}","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":620,"y":320,"wires":[[]]},{"id":"3994f7f86e72ec90","type":"complete","z":"a4e213fd662c6a91","name":"","scope":["562be4a339e1a7c2"],"uncaught":false,"x":110,"y":800,"wires":[["029faa27e62905f0"]]},{"id":"029faa27e62905f0","type":"function","z":"a4e213fd662c6a91","name":"Get payload status","func":"var status=global.get('status') || 0;\n\n\nvar counts=global.get('counts') || 1;\n\nvar a = global.get('sendcommand');\n\nfor (let j = 0; j < status.length; j++) {\n  status[j].ts = getTime();\n  status[j].configVersion = 1;\n  status[j].paramList = global.get('status').paramList;\n  status[j].parameter1 = status.parameter1;\n  status[j].parameter2 = status.parameter2;\n  status[j].parameter3 = status.parameter3;\n  status[j].parameter4 = status.parameter4;\n}\n\n// var b ={\n//     \"ts\": getTime(),\n//     \"configVersion\": 1,\n//     \"paramList\":global.get('status').paramList,\n//     \"parameter1\":[],\n//     \"parameter2\":[],\n//     \"parameter3\":[],\n//     \"parameter4\":[]\n//     }\n    \n       if(a.parameter1[1] != null){\n       status.parameter1 = a.parameter1[1];\n       status.parameter2 = a.parameter2[0];\n       status.parameter3 = a.parameter3[0];\n       status.parameter4 = a.parameter4[0];\n       }\n       else if(a.parameter2[1] != null){\n       status.parameter1 = a.parameter1[0];\n       status.parameter2 = a.parameter2[1];\n       status.parameter3 = a.parameter3[0];\n       status.parameter4 = a.parameter4[0];\n       }else if(a.parameter3[1] != null){\n       status.parameter1 = a.parameter1[0];\n       status.parameter2 = a.parameter2[0];\n       status.parameter3 = a.parameter3[1];\n       status.parameter4 = a.parameter4[0];\n       }else{\n       status.parameter1 = a.parameter1[0];\n       status.parameter2 = a.parameter2[0];\n       status.parameter3 = a.parameter3[0];\n       status.parameter4 = a.parameter4[1];\n       }\nnode.warn(global.get('status'))\n\nfunction getTime() {\n  let date_ob = new Date();\n  // adjust 0 before single digit date\n  let date = (\"0\" + date_ob.getDate()).slice(-2);\n  // current month\n  let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n  // current year\n  let year = date_ob.getFullYear();\n  // current hours\n  let hours = date_ob.getHours();\n  // current minutes\n  let minutes = date_ob.getMinutes();\n  // current seconds\n  let seconds = date_ob.getSeconds();\n  let millisecond = date_ob.getMilliseconds();\n  // prints date & time in YYYY-MM-DD HH:MM:SS format\n  return (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds + \".\" + millisecond);\n}\n\nmsg.payload=status;\n\n// msg.topic = env.get(\"TOPIC_CONFIG_STATUS\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":800,"wires":[["7f4898ee5e51d851","31e67f8ea1a978d4"]]},{"id":"7f4898ee5e51d851","type":"mqtt out","z":"a4e213fd662c6a91","name":"CONFIG_STATUS","topic":"aemr80001/config/status","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"77f3627e6c372d80","x":750,"y":800,"wires":[]},{"id":"31e67f8ea1a978d4","type":"debug","z":"a4e213fd662c6a91","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":520,"y":880,"wires":[]},{"id":"4185776400ed21b0","type":"comment","z":"a4e213fd662c6a91","name":"Pre require","info":"process.env.HOSTNAME = require('os').hostname();\n function getTime() {\n    let date_ob = new Date();\n    \n     // adjust 0 before single digit date\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\n    \n     // current month\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n    \n     // current year\n    let year = date_ob.getFullYear();\n    \n     // current hours\n    let hours = date_ob.getHours();\n    \n     // current minutes\n    let minutes = date_ob.getMinutes();\n    \n     // current seconds\n    let seconds = date_ob.getSeconds();\n    let millisecond = date_ob.getMilliseconds();\n    \n     // prints date & time in YYYY-MM-DD HH:MM:SS format\n    return (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds + \".\" + millisecond);\n    }\n process.env.TrainID = 'aemr_810001';\n\n process.env.PARAMETER_OPTIONS = JSON.stringify(['parameter1','parameter2','parameter3','parameter4']);\n process.env.MQTT_SERVER = 'localhost';\n process.env.MQTT_PORT = '1883';\n //payload\n\n process.env.PAYLOAD_CONFIG_STATUS = JSON.stringify([{\"ts\":getTime(),\"configVersion\":1,\"paramList\":[{\"name\":\"parameter1\",\"type\":\"number\",\"min\":10,\"max\":100,\"readOnly\":false},{\"name\":\"parameter2\",\"type\":\"boolean\",\"readOnly\":false},{\"name\":\"parameter3\",\"type\":\"string\",\"readOnly\":false},{\"name\":\"parameter4\",\"type\":\"string\",\"readOnly\":false}],\"parameter1\":90,\"parameter2\":false,\"parameter3\":\"E.g.IP Address\",\"parameter4\":\"base64 encoded, e.g client cert\"}]);\n process.env.PAYLOAD_CONFIG_COMMAND = JSON.stringify([{\"ts\":getTime(),\"commandId\":1,\"parameter1\":[90,80],\"parameter2\":[false,true],\"parameter3\":[\"E.g.IP Address\",\"E.g.IPV6 Address\"],\"parameter4\":[\"base64 encoded cert\",\"base64\"]}]);\n process.env.PAYLOAD_CONFIG_COMMAND_RESULT = JSON.stringify([{\"ts\":getTime(),\"commandId\":1,\"result\":1,\"failedItems\":[{\"failedParam\":\"\",\"reason\":\"\"}]}]);\n //topic\n\n process.env.TOPIC_CONFIG_COMMAND ='+/config/command';\n process.env.TOPIC_CONFIG_STATUS ='+/config/status';\n process.env.TOPIC_CONFIG_COMMAND_RESULT ='+/config/command_result';\n\n","x":100,"y":100,"wires":[]},{"id":"0d505bd773963eb0","type":"comment","z":"a4e213fd662c6a91","name":"OBS-Wayside ICD_v0.13","info":"Nhan Ly","x":150,"y":20,"wires":[]},{"id":"77f3627e6c372d80","type":"mqtt-broker","name":"","broker":"${MQTT_SERVER}","port":"${MQTT_PORT}","clientid":"OBSClient","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"a4508689.5e23c8","type":"ui_group","name":"Publish config command","tab":"462ad7a6.6238f8","order":4,"disp":true,"width":"23","collapse":false},{"id":"462ad7a6.6238f8","type":"ui_tab","name":"Config Data Application","icon":"dashboard","order":1,"disabled":false,"hidden":false}]