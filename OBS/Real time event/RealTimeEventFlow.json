[
    {
        "id": "4abd57f3c7defcac",
        "type": "tab",
        "label": "3.4.11 OBS - Real Time Event",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e3df2fbaac3661a6",
        "type": "mqtt out",
        "z": "4abd57f3c7defcac",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8af5f58a03934c8d",
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "7fa51fc0111a8867",
        "type": "comment",
        "z": "4abd57f3c7defcac",
        "name": "OBS Wayside ICD_v0.16",
        "info": "",
        "x": 210,
        "y": 200,
        "wires": []
    },
    {
        "id": "1cc98375bbf58421",
        "type": "comment",
        "z": "4abd57f3c7defcac",
        "name": "Real Time Events",
        "info": "The OBS will provide real time events to the wayside. Events are singular occurrences, unlike the real time data, which is time based and continuous.\n",
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "a503bd71b752d598",
        "type": "ui_template",
        "z": "4abd57f3c7defcac",
        "group": "527ba5970a1962c3",
        "name": "PUBLISH Real Time Event  from OBS to Wayside",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Employment Verification Form</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\"\n    integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossorigin=\"anonymous\">\n  <style>\n    html,\n    body {\n      min-height: 100%;\n    }\n\n    body,\n    div,\n    form,\n    input,\n    label {\n      padding: 0;\n      margin: 0;\n      outline: none;\n      font-family: Roboto, Arial, sans-serif;\n      font-size: 13px;\n      color: #666;\n      line-height: 22px;\n    }\n\n    legend {\n      color: #fff;\n      background-color: #212529;\n      border-color: #32383e;\n      padding: 3px 5px;\n      font-size: 20px;\n    }\n    .help-block {\n        display: block;\n        margin-top: 2px;\n        margin-bottom: 10px;\n        color: #a94442;\n        font-size: 15px;\n    }\n    h1 {\n      margin: 0;\n      font-size: 36px;\n      color: #fff;\n      z-index: 2;\n    }\n\n    .testbox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: inherit;\n      padding: 20px;\n    }\n\n    form {\n      width: 100%;\n      padding: 20px;\n      border-radius: 6px;\n      background: #fff;\n      box-shadow: 0 0 10px 0 #095484;\n    }\n\n    .banner {\n      position: relative;\n      height: 320px;\n      background-image: url(\"/uploads/media/default/0001/02/19ea6ba00def11fb8f5113a4d7555a97bd58ce3d.jpeg\");\n      background-size: cover;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n    }\n\n    .banner::after {\n      content: \"\";\n      background-color: rgba(0, 0, 0, 0.6);\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    input {\n      margin-bottom: 10px;\n      border: 1px solid #ccc;\n      border-radius: 3px;\n    }\n\n    input {\n      width: calc(100% - 10px);\n      padding: 5px;\n    }\n\n    select {\n      width: 100%;\n      padding: 7px 0;\n      background: transparent;\n    }\n\n    input[type=\"date\"] {\n      padding: 4px 5px;\n    }\n\n    .item:hover p,\n    .item:hover i,\n    .question:hover p,\n    .question label:hover,\n    input:hover::placeholder {\n      color: #095484;\n    }\n\n    .item input:hover {\n      border: 1px solid transparent;\n      box-shadow: 0 0 6px 0 #095484;\n      color: #095484;\n    }\n\n    .item {\n      position: relative;\n      margin: 10px 0;\n    }\n\n    .item span {\n      color: red;\n    }\n\n    input[type=\"date\"]::-webkit-inner-spin-button {\n      display: none;\n    }\n\n    .item i,\n    input[type=\"date\"]::-webkit-calendar-picker-indicator {\n      position: absolute;\n      font-size: 20px;\n      color: #095484;\n    }\n\n    .item i {\n      right: 2%;\n      top: 30px;\n      z-index: 1;\n    }\n\n    [type=\"date\"]::-webkit-calendar-picker-indicator {\n      right: 1%;\n      z-index: 2;\n      opacity: 0;\n      cursor: pointer;\n    }\n\n    .question span {\n      margin-left: 30px;\n    }\n\n    .btn-block {\n      margin-top: 10px;\n      text-align: center;\n\n    }\n\n    button {\n      width: 150px;\n      padding: 10px;\n      border: none;\n      border-radius: 5px;\n      background: #095484;\n      font-size: 16px;\n      color: #fff;\n      cursor: pointer;\n      background-color: #28a745;\n      border-color: #28a745;\n    }\n\n    button:hover {\n      background: #28a745;\n    }\n\n    @media (min-width: 568px) {\n\n      .name-item,\n      .city-item {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n      }\n\n      .name-item input,\n      .city-item input,\n      .name-item div {\n        width: calc(50% - 20px);\n      }\n\n      .name-item div input {\n        width: 97%;\n      }\n\n      .name-item div label {\n        display: block;\n        padding-bottom: 5px;\n      }\n    }\n\n    .input,\n    .textarea {\n      border: 1px solid #ccc;\n      font-family: inherit;\n      font-size: inherit;\n      padding: 1px 6px;\n    }\n\n    .table {\n      width: 100%;\n      max-width: 100%;\n      margin-bottom: 1rem;\n      background-color: transparent;\n    }\n\n    table {\n      border-collapse: collapse;\n    }\n\n    *,\n    ::after,\n    ::before {\n      box-sizing: border-box;\n    }\n\n    table {\n      display: table;\n      border-collapse: separate;\n      box-sizing: border-box;\n      text-indent: initial;\n      border-spacing: 2px;\n      border-color: grey;\n    }\n\n    thead {\n      display: table-header-group;\n      vertical-align: middle;\n      border-color: inherit;\n    }\n\n    table {\n      border-collapse: collapse;\n    }\n\n    table {\n      border-collapse: separate;\n      text-indent: initial;\n      border-spacing: 2px;\n    }\n\n    .table .thead-dark th {\n      color: #fff;\n      background-color: #212529;\n      border-color: #32383e;\n    }\n\n    .table thead th {\n      vertical-align: bottom;\n      border-bottom: 2px solid #dee2e6;\n    }\n\n    .table td,\n    .table th {\n      padding: .75rem;\n      vertical-align: top;\n      border-top: 1px solid #dee2e6;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n\n\n    .table .thead-dark th {\n      color: #fff;\n      background-color: #212529;\n      border-color: #32383e;\n    }\n\n    .table thead th {\n      vertical-align: bottom;\n      border-bottom: 2px solid #dee2e6;\n    }\n\n    .table td,\n    .table th {\n      padding: .75rem;\n      vertical-align: top;\n      border-top: 1px solid #dee2e6;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    *,\n    ::after,\n    ::before {\n      box-sizing: border-box;\n    }\n\n    user agent stylesheet th {\n      display: table-cell;\n      vertical-align: inherit;\n      font-weight: bold;\n      text-align: -internal-center;\n    }\n\n    table {\n      border-collapse: collapse;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"testbox\" style=\"display: flex;\">\n      \n    <form style=\" display: block; height: 800px; overflow: auto;\" id=\"myForm\">\n      <fieldset style=\"padding-left: 90px;\">\n        <legend>MQTT</legend>\n         <div class=\"col-sm-12\">\n\n                <a class=\"float-right ml-3\" href=\"#\" id=\"clear-log\">Clear log</a>\n\n                <a class=\"float-right \" target=\"_blank\" href=\"/realtime-event.log\">Show log</a>\n            </div>\n         <div class=\"item\">\n          <div class=\"item\">\n            <div class=\"name-item\">\n          <!--<div>-->\n          <!--  <label for=\"tranid\">Tranid</label>-->\n          <!--  <input style=\"width: 72%;\" id=\"tranid\" type=\"text\" name=\"topic\" required />-->\n          <!--</div>-->\n             <div id=\"divSelectMqttAccount\">\n                \n             </div>\n            <!--<div>-->\n            <!--    <label for=\"tranid\">Tranid</label>-->\n            <!--    <select  ng-model=\"selectedAccount\" style=\"width: 72%;\" id=\"tranid\" name=\"tranid\" required>-->\n            <!--      <option ng-repeat=\"item in msg.mqttAccounts\" ng-value=\"{{item}}\">{{item.username}}</option>-->\n            <!--    </select>-->\n            <!--    <h1>You selected a {{selectedCar.color}} {{selectedCar.model}}</h1>-->\n            <!--</div>-->\n            \n          <div>\n            <label for=\"topic\">Topic</label>\n            <input style=\"width: 72%;\" id=\"topic\" type=\"text\" readonly placeholder=\"/real-time/event\" name=\"topic\"\n              required />\n          </div>\n        </div>\n          </div>\n        </div>\n        <div class=\"item\">\n          <div class=\"item\">\n            <div class=\"name-item\">\n              <div>\n                <label for=\"Qos\">Qos</label>\n                <select disabled style=\"width: 72%;\" id=\"qos\" name=\"qos\" required>\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                  <option selected value=\"2\">2</option>\n                </select>\n              </div>\n              <div>\n                <label for=\"retainFlag\">RetainFlag</label>\n                <select disabled style=\"width: 72%;\" id=\"retainFlag\" , name=\"retainFlag\" required>\n\n                  <option value=\"true\">True</option>\n                  <option selected value=\"false\">False</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n      <br />\n      <fieldset style=\"padding-left: 90px;\">\n        <legend>Payload</legend>\n        <br />\n        <div class=\"name-item\">\n            <div>\n                <label for=\"tranid\">Timestamp</label>\n                <input style=\"width: 72%;\" id=\"Timestamp\" type=\"text\" name=\"eventCode\" placeholder=\"leave blank to get current time\"/>\n                <h5 class=\"help-block\" id=\"timestampError\"></h5>\n              </div>\n            <div>\n                <label for=\"tranid\">Event Code</label>\n                <input style=\"width: 72%;\" id=\"eventCode\" type=\"text\" name=\"eventCode\"/>\n                <div style=\"display:flex;width:500px\">\n                    <label class=\"form-check-label\" for=\"flexCheckDisabled\">\n                        Check to input null value\n                    </label>\n                    <input style=\"width:5%;height:15px;margin:revert\" type=\"checkbox\" value=\"\" id=\"checkPublishNullEventCode\">\n                </div>\n                <h5 class=\"help-block\" id=\"errorEventCode\"></h5>\n              </div>\n         </div>\n        <div class=\"name-item\">\n          <div>\n            <label for=\"tranid\">activationTimestamp</label>\n            <input style=\"width: 72%;\" id=\"activationTimestamp\" type=\"number\" name=\"activationTimestamp\"/>\n            <!--<div style=\"flex\">-->\n            <!--    <label class=\"form-check-label\" for=\"flexCheckDisabled\">-->\n            <!--        Check to publish String value-->\n            <!--    </label>-->\n            <!--    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkPublishStringActTimeStamp\">-->\n            <!--</div>-->\n            <div style=\"display:flex;width:500px\">\n                <label class=\"form-check-label\" for=\"flexCheckDisabled\">\n                    Check to input String value\n                </label>\n                <input style=\"width:5%;height:15px;margin:revert\" type=\"checkbox\" value=\"\" id=\"checkPublishStringActTimeStamp\">\n            </div>\n            <h5 class=\"help-block\" id=\"errorACtivationTimestamp\"></h5>\n          </div>\n\n          <div>\n            <label for=\"topic\">recoveryTimestamp</label>\n            <input style=\"width: 72%;\" id=\"recoveryTimestamp\" type=\"number\" name=\"recoveryTimestamp\" />\n            <!--<div style=\"flex\">-->\n            <!--    <label class=\"form-check-label\" for=\"flexCheckDisabled\">-->\n            <!--        Check to publish String value-->\n            <!--    </label>-->\n            <!--    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkPublishStringRecoveryTimeStamp\">-->\n            <!--</div>-->\n             <div style=\"display:flex;width:500px\">\n                <label class=\"form-check-label\" for=\"flexCheckDisabled\">\n                    Check to input String value\n                </label>\n                <input style=\"width:5%;height:15px;margin:revert\" type=\"checkbox\" value=\"\" id=\"checkPublishStringRecoveryTimeStamp\">\n            </div>\n            <h5 id=\"errorRecoveryTimestamp\" class=\"help-block\"></h5>\n          </div>\n        </div>\n        \n        <label for=\"tranid\">logClass</label>\n        <br />\n        <label for=\"tranid\" id=\"logClasserros\" style=\"color: red;\"></label>\n        <fieldset style=\"width: 88%; border: 0;\">\n          <div>\n            <label for=\"tranid\">timestampList</label>\n            <br />\n            <fieldset>\n              <div>\n                <i id=\"add\" class=\"fas fa-plus-square\"></i>\n\n              </div>\n              <div id=\"buildyourform\" class=\"name-item\">\n\n              </div>\n              <!--<label id=\"labelCheckNullTimestampList\" class=\"form-check-label\" for=\"flexCheckDisabled\">-->\n              <!--      Check to send null this object -->\n              <!--  </label>-->\n              <!--<input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkNullTimestampList\">-->\n            <div style=\"display:flex;width:500px\">\n                <label id=\"labelCheckNullTimestampList\" class=\"form-check-label\" for=\"flexCheckDisabled\">\n                    Check to input Null value\n                </label>\n                <input style=\"width:5%;height:15px;margin:revert\" type=\"checkbox\" value=\"\" id=\"checkNullTimestampList\">\n            </div>\n            </fieldset>\n            <h5 class=\"help-block\" id=\"errorTimestampList\" ></h5>\n            <br />\n            <label for=\"tranid\">signalList</label>\n            <fieldset>\n              <div>\n                <i id=\"add2\" class=\"fas fa-plus-square\"></i>\n\n              </div>\n              \n              <fieldset style=\"border: 0;\" id=\"buildyourform2\">\n              </fieldset>\n              <!--<label id=\"labelCheckNullSignalList\" class=\"form-check-label\" for=\"flexCheckDisabled\">-->\n              <!--      Check to send null this object -->\n              <!--  </label>-->\n              <!--<input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkNullSignalList\">-->\n            <div style=\"display:flex;width:500px\">\n                <label id=\"labelCheckNullSignalList\" class=\"form-check-label\" for=\"flexCheckDisabled\">\n                    Check to input Null value\n                </label>\n                <input style=\"width:5%;height:15px;margin:revert\" type=\"checkbox\" value=\"\" id=\"checkNullSignalList\">\n            </div>\n            </fieldset>\n            <h5 class=\"help-block\" id=\"errorSignalList\" ></h5>\n            <br />\n          </div>\n        <h5 id=\"errorLogclass\" class=\"help-block\"></h5>\n        </fieldset>\n        <div class=\"item\">\n          <div class=\"item\">\n            <div class=\"name-item\">\n              <div>\n                <label for=\"vehicleId\">vehicleId</label>\n                <select style=\"width: 72%;\" id=\"vehicleId\" name=\"vehicleId\" required>\n                  <option value=\"0\">0 = events for the whole train </option>\n                  <option value=\"1\">1 = vehicle id 1</option>\n                  <option value=\"2\">2 = vehicle id 2</option>\n                  <option value=\"3\">3 = vehicle id 3</option>\n                  <option value=\"4\">4 = vehicle id 4</option>\n                  <option value=\"5\">5 = vehicle id 5</option>\n                  <option value=\"6\">6 = vehicle id 6</option>\n                  <option value=\"7\">7 = vehicle id 7</option>\n                  <option value=\"8\">8 = vehicle id 8</option>\n                  <option value=\"9\">9 = vehicle id 9</option>\n                  <option value=\"10\">10 = vehicle id 10</option>\n                  <option value=\"11\">11 = vehicle id 11</option>\n                  <option value=\"12\">12 = vehicle id 12</option>\n                </select>\n              </div>\n              <div>\n                <label for=\"subVehicleId\">subVehicleId</label>\n                <select style=\"width: 72%;\" id=\"subVehicleId\" , name=\"subVehicleId\" required>\n                  <option value=\"0\">0 = events for the whole train </option>\n                  <option value=\"1\">1 = subvehicle id 1</option>\n                  <option value=\"2\">2 = subvehicle id 2</option>\n                  <option value=\"3\">3 = subvehicle id 3</option>\n                  <option value=\"4\">4 = subvehicle id 4</option>\n                </select>\n              </div>\n              <div>\n                <label for=\"subVehicleId\">Options</label>\n                <select style=\"width: 72%;\" id=\"op\" , name=\"op\" required>\n                  <option value=\"0\">Manual </option>\n                  <option value=\"1\">Json File</option>\n                </select>\n              </div>\n              <div>\n                <label for=\"maintenanceMode\">maintenanceMode</label>\n                <select style=\"width: 72%;\" id=\"maintenanceMode\" , name=\"maintenanceMode\" required>\n                  <option value=\"0\">0 = train in service</option>\n                  <option value=\"1\">1 = maintenance mode</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <input type=\"file\" style=\"width: 35%; display: none\" id=\"selectFiles\" required /><br />\n          <button style=\"height: 35px; width: 90px; display: none;\" id=\"import\">Import</button>\n          <div>\n            <br />\n            <textarea style=\"width: 100%; height: 200px; display:none;resize: none; \" id=\"result\" required></textarea>\n          </div>\n          <div id=\"divTable\">\n                    \n          </div>\n        </div>\n      </fieldset>\n      <br />\n      <div class=\"btn-block\" style=\"float: left; padding-left: 93px;\">\n        <button style=\"width: 135px;\" id=\"submit\">Publish</button>\n        <button style=\"width: 135px; color: #fff;background-color: #dc3545;\n                   border-color: #dc3545;\" id=\"delete\">Reset</button>\n      </div>\n      <br />\n      <br />\n\n    </form>\n    <br />\n    <br />\n    <br />\n  </div>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\"\n    crossorigin=\"anonymous\">\n    </script>\n    <script type=\"text/javascript\">\n        function checkPublishString(idCheck,idInput)\n        {\n            var checkInput = document.getElementById(idCheck);\n            if(checkInput.checked)\n            {\n                document.getElementById(idInput).setAttribute('type', 'text');\n            }else{\n                document.getElementById(idInput).setAttribute('type', 'number');\n            }\n        }\n        function checkPublishStringList(idCheck,idDiv)\n        {\n            var checkInput = document.getElementById(idCheck);\n            console.log(\"checked\")\n            if(checkInput.checked)\n            {\n                document.getElementById(idDiv).children[1].setAttribute('type', 'text');\n            }else{\n                document.getElementById(idDiv).children[1].setAttribute('type', 'number');\n            }\n        }\n    </script>\n  <script>\n    (function (scope) {\n    //----------------------------------------------------MQTT Config---------------------------------------------------------------//\n    var topic = $(\"#topic\");\n    var Option = $(\"#op\");\n    var addtimestampList = $(\"#add\");\n    var addsignalList = $(\"#add2\");\n    var tranid = $(\"#tranid\");\n    var payload = $(\"#result\");\n    var qos = $(\"#qos\");\n    var retainFlag = $('#retainFlag');\n    var submitId = $(\"#submit\");\n    var selectFile = $(\"#selectFiles\");\n    var arrays = null;\n    //-----------------------------------------------------Payload for real time evnt--------------------------------------------------------------//\n    var checkPublishStringActTimestamp = $('#checkPublishStringActTimeStamp')\n    var checkPublishStringRecoveryTimestamp = $('#checkPublishStringRecoveryTimeStamp')\n    var activationTimestamps = $(\"#activationTimestamp\");\n    var recoveryTimestamps = $(\"#recoveryTimestamp\");\n    var vehicleIds = $(\"#vehicleId\");\n    var subVehicleIds = $(\"#subVehicleId\");\n    var maintenanceModes = $(\"#maintenanceMode\");\n    let date_ob = new Date();\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n    let year = date_ob.getFullYear();\n    let hours = date_ob.getHours();\n    let minutes = date_ob.getMinutes();\n    let seconds = date_ob.getSeconds();\n    let millisecond = date_ob.getMilliseconds();\n\n    millisecond=String(millisecond)\n    let datetime = (pad(year) + \"-\" + pad(month) + \"-\" + pad(date) + \" \" + pad(hours) + \":\" + pad(minutes) + \":\" + pad(seconds) + \".\" + millisecond.padStart(3, '0'))\n    var eventCode = $(\"#eventCode\");\n    var divTable=$(\"#divTable\")\n    var Timestamp = $(\"#Timestamp\")\n    var timestampError = $(\"#timestampError\")\n    //-----------------------------------------------------DataType---------------------------------------------------------\n    var checkNullTimestampList = $(\"#checkNullTimestampList\");\n    var checkNullSignalList = $(\"#checkNullSignalList\");\n    var labelCheckNullTimestampList = $(\"#labelCheckNullTimestampList\")\n    var labelCheckNullSignalList = $(\"#labelCheckNullSignalList\")\n    var errorACtivationTimestamp = $(\"#errorACtivationTimestamp\")\n    var errorRecoveryTimestamp = $(\"#errorRecoveryTimestamp\")\n    var errorSignalList = $(\"#errorSignalList\")\n    var errorTimestampList = $(\"#errorTimestampList\")\n    var errorEventCode = $(\"#errorEventCode\")\n    var checkPublishNullEventCode = $(\"#checkPublishNullEventCode\")\n    var errorLogclass = $(\"#errorLogclass\")\n        \n    function pad(d) {\n        return (d < 10) ? '0' + d.toString() : d.toString();\n    }\n    checkPublishNullEventCode.change(()=>{\n        if(checkPublishNullEventCode.is(\":checked\"))\n        {\n            errorEventCode.text(\"Event code is required object\")\n        }else{\n            errorEventCode.text(\"\")\n        }\n    })\n    \n\n    checkPublishStringActTimestamp.change(()=>{\n        checkPublishString(\"checkPublishStringActTimeStamp\",\"activationTimestamp\")\n        if($(\"#checkPublishStringActTimeStamp\").is(':checked'))\n        {\n            errorACtivationTimestamp.text(\"Datatype incorrect\")\n        }else{\n            errorACtivationTimestamp.text(\"\")\n        }\n    })\n    checkPublishStringRecoveryTimestamp.change(()=>{\n        checkPublishString(\"checkPublishStringRecoveryTimeStamp\",\"recoveryTimestamp\")\n        if($(\"#checkPublishStringRecoveryTimeStamp\").is(':checked'))\n        {\n            errorRecoveryTimestamp.text(\"Datatype incorrect\")\n        }else{\n            errorRecoveryTimestamp.text(\"\")\n        }\n    })\n\n    //----------------------------------------------Clear form-------------------------------------------------------------------//\n    $(\"#delete\").click(() => {\n      document.getElementById(\"myForm\").reset();\n      document.getElementById('selectFiles').style.display = \"none\";\n      document.getElementById('import').style.display = \"none\";\n\n    })\n\n    //------------------------------------------------------addsignalList--------------------------------------------------------------//\n    addsignalList.click(() => {\n        checkNullSignalList.prop('checked', false)\n        errorSignalList.text(\"\")\n        checkNullSignalList.css(\"display\",\"none\")\n        labelCheckNullSignalList.css(\"display\",\"none\")\n      // add item for signalList\n      var lastField1 = $(\"#buildyourform2 div.fieldwrapper:last\");\n      console.log(lastField1.length)\n      var intId = (lastField1 && lastField1.length && lastField1.data(\"idx\") + 1) || 1;\n      \n      console.log(intId)\n      var fieldWrappersignalList = $(\"<div  style=\\\"margin-right: -5%\\\"  class=\\\"fieldwrapper\\\" id=\\\"field\" + intId + \"\\\"/>\");\n      var fName = $(\" <br/> signalId \" + intId + \" <input style=\\\"width: 35%\\\" type=\\\"text\\\" class=\\\"fieldname\\\" />\");\n      var fName2 = $(\" <br/> signalValue \" + intId + \"  <i id=\\\"signal\" + intId + \"\\\" class=\\\"fas fa-plus-square\\\"></i>  <fieldset id=\\\"fieldset\" + intId + \"\\\" style=\\\"margin-left:50px ;width: 90% ; border: 1px;\\\"  ></fieldset>  \");\n      var errorMessage = $(\"<h5 class=\\\"help-block\\\" id=\\\"errorSignalId\"+intId+\"\\\" ></h5>\")\n      fieldWrappersignalList.data(\"idx\", intId);\n      var removeButton = $(\"<i id=\\\"xoa\\\" class=\\\"fas fa-trash-alt\\\"></i>\");\n        \n      removeButton.click(function () { //delete item for signalList\n        $(this).parent().remove();\n        var signalList = document.getElementById(\"buildyourform2\").childElementCount;\n        console.log(signalList)\n        if(signalList==0)\n        {\n            labelCheckNullSignalList.css(\"display\",\"\")\n            checkNullSignalList.css(\"display\",\"\")\n        }\n      });\n      fieldWrappersignalList.append(fName);\n      fieldWrappersignalList.append(fName2);\n      fieldWrappersignalList.append(removeButton);\n      fieldWrappersignalList.append(errorMessage);\n      $(\"#buildyourform2\").append(fieldWrappersignalList);\n\n      // add item for signalValue\n      $(\"#signal\" + intId).click(() => {\n        var lastFields = $(\"#fieldset\" + intId + \" \" + \"fieldset:last\")\n        var intIds = (lastFields && lastFields.length && lastFields.data(\"idxs\") + 1) || 1;\n        var fieldWrapper = $(\"<fieldset  style=\\\"border: 0;\\\" id=\\\"field\" +intId+intIds + \"\\\"/>\");\n        // var fieldWrappers = $(\"<fieldset  style=\\\"border: 0;\\\">\");\n        fieldWrapper.data(\"idxs\", intIds);\n        var divCheck = $(\"<div style=\\\"display:flex;width:500px\\\"/>\")\n        var fName = $(\" <br/> value \" + intIds + \" <input style=\\\"width: 76%\\\" type=\\\"number\\\" class=\\\"fieldname\\\" />\");\n        var removeButton = $(\"<i id=\\\"xoa\\\" class=\\\"fas fa-trash-alt\\\"></i>\");\n        var labelCheck = $(\"<label class=\\\"form-check-label\\\" id=\\\"labelSignalList\"+intId+\"\\\" for=\\\"flexCheckDisabled\\\">Check to input String value</label>\")\n        var checkBox = $(\"<input style=\\\"width:5%;height:15px;margin:revert\\\" class=\\\"form-check-input\\\" onchange=\\\"checkPublishStringList(this.id,'field\"+intId+intIds+\"'\"+\")\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"checkPublishStringSignalvalue\"+intId+intIds+\"\\\">\")\n        var errorMessage = $(\"<h5 class=\\\"help-block\\\" id=\\\"errorSignalValue\"+intId+intIds+\"\\\" ></h5>\")\n        divCheck.append(labelCheck)\n        divCheck.append(checkBox)\n        fieldWrapper.append(fName);\n        fieldWrapper.append(removeButton);\n        fieldWrapper.append(errorMessage);\n        fieldWrapper.append(divCheck)\n        // fieldWrapper.append(fieldWrappers);\n        $(\"#fieldset\" + intId).append(fieldWrapper);\n        \n        removeButton.click(function () { //delete item for signalValue\n          $(this).parent().remove();\n        });\n        checkBox.change(function(){\n          if(checkBox.is(\":checked\"))\n          {\n              errorMessage.text(\"Dawtatype incorrect\")\n          }else{\n              errorMessage.text(\"\")\n          }\n      })\n      })\n\n\n    })\n\n    //------------------------------------------------------addtimestampList--------------------------------------------------------------//\n    \n    addtimestampList.click(() => {\n      checkNullTimestampList.prop('checked', false)\n      errorTimestampList.text(\"\")\n      checkNullTimestampList.css(\"display\",\"none\")\n      labelCheckNullTimestampList.css(\"display\",\"none\")\n      var lastField1 = $(\"#buildyourform div.fieldwrapper:last\");\n      console.log(lastField1.length)\n      var intId = (lastField1 && lastField1.length && lastField1.data(\"idx\") + 1) || 1;\n      console.log(intId)\n      var fieldWrapper = $(\"<div  style=\\\"margin-right: -5%\\\"  class=\\\"fieldwrapper\\\" id=\\\"field\" + intId + \"\\\"/>\");\n      var divCheck = $(\"<div style=\\\"display:flex;width:500px\\\"/>\")\n      var fName = $(\" <br/> value \" + intId + \" <input style=\\\"width: 76%\\\" type=\\\"number\\\" class=\\\"fieldname\\\" />\");\n      fieldWrapper.data(\"idx\", intId);\n      var removeButton = $(\" <i class=\\\"fas fa-trash-alt\\\"></i>\");\n      var checkBox = $(\"<input  style=\\\"width:5%;height:15px;margin:revert\\\" class=\\\"form-check-input\\\" onchange=\\\"checkPublishStringList(this.id,'field\"+intId+\"'\"+\")\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"checkPublishStringTimestamp\"+intId+\"\\\">\")\n      var labelCheck = $(\"<label class=\\\"form-check-label\\\" id=\\\"labelTimestampList\"+intId+\"\\\" for=\\\"flexCheckDisabled\\\">Check to input String value</label>\")\n      var errorMessage = $(\"<h5 class=\\\"help-block\\\" id=\\\"errorValueTimestamp\"+intId+\"\\\" ></h5>\")\n      divCheck.append(labelCheck)\n      divCheck.append(checkBox)\n      removeButton.click(function () {\n        $(this).parent().remove();\n        var timestampList = document.getElementById(\"buildyourform\").childElementCount;\n        if(timestampList==0)\n        {\n            checkNullTimestampList.css(\"display\",\"\")\n            labelCheckNullTimestampList.css(\"display\",\"\")\n        }\n      });\n      checkBox.change(function(){\n          if(checkBox.is(\":checked\"))\n          {\n              errorMessage.text(\"Datatype incorrect\")\n          }else{\n              errorMessage.text(\"\")\n          }\n      })\n      fieldWrapper.append(fName);\n      fieldWrapper.append(removeButton);\n      fieldWrapper.append(divCheck);\n      fieldWrapper.append(errorMessage);\n      $(\"#buildyourform\").append(fieldWrapper);\n\n    })\n\n    //------------------------------------------------------insert topic--------------------------------------------------------------//\n    // tranid.keyup(() => {\n    //   $(\"#topic\").val(tranid.val() + \"/real-time/event\");\n\n    // })\n    \n    \n    \n    \n    function handleClearLog() {\n\n            function downloadObjectAsJson(log, exportName) {\n\n                var dataStr = \"data:text/json;charset=utf-8,\" + log;\n\n                var downloadAnchorNode = document.createElement('a');\n\n                downloadAnchorNode.setAttribute(\"href\", dataStr);\n\n                downloadAnchorNode.setAttribute(\"download\", exportName);\n\n                document.body.appendChild(downloadAnchorNode); // required for firefox\n\n                downloadAnchorNode.click();\n\n                downloadAnchorNode.remove();\n\n            }\n            $.ajax({\n\n                url: \"/realtime-event-clear-log\",\n\n                type: \"GET\",\n\n                success: function (res) {\n\n                    if (res.status == false) {\n\n                        // to do with error\n\n                        console.log(res.error);\n\n                    } else {\n\n                        var logString = \"\";\n\n                        res.data.forEach((v, i) => {\n\n                            logString += `${v.timestamp} ${v.type} message topic: ${v.topic} payload : ${ JSON.stringify(v.payload)} qos: ${v.qos} retain : ${v.retain} \\n`;\n\n                        })\n\n                        console.log(logString);\n\n                        downloadObjectAsJson(logString, \"realtime-event-log.txt\")\n\n                    }\n\n\n\n                }\n\n            });\n\n        }\n            \n    \n   $(document).ready(function() {\n        var clearLogId = $(\"#clear-log\");\n        scope.send({message:\"getmqttaccount\"})\n        \n         clearLogId.on(\"click\", handleClearLog);\n    });\n    \n    scope.$watch('msg',function(msg){\n        if(msg.mqttAccounts)\n        {\n            console.log(msg)\n            // var divSelect = $(\"#divSelectMqttAccount\")\n            // var label =$(\"<label for=\\\"selectMqttAccount\\\">Trainid</label>\")\n            // var select =$(\"<select style=\\\"width: 72%;\\\" id=\\\"selectMqttAccount\\\" name=\\\"selectMqttAccount\\\"></select>\")\n            // console.log(JSON.stringify(msg.mqttAccounts))\n            // localStorage.setItem(\"mqttaccount\", JSON.stringify(msg.mqttAccounts));\n            // console.log(JSON.parse(localStorage.getItem(\"mqttaccount\")))\n            // divSelect.append(label)\n            // for(var i=0;i<mqttAccounts.length;i++)\n            // {\n            //     var option = $(\"<option value=\\\"\"+mqttAccounts[i].username+\"\\\">\"+mqttAccounts[i].username+\"</option>\")\n            //     select.append(option)\n            // }\n            // select.change(function(){\n                \n            //     for(var i=0;i<mqttAccounts.length;i++)\n            //     {\n            //         if($('#selectMqttAccount').find(\":selected\").text()==mqttAccounts[i].username)\n            //         {\n            //             topic.val($('#selectMqttAccount').find(\":selected\").text()+ \"/real-time/event\")\n            //             scope.send({action:\"disconnect\"})\n            //             var broker={username:mqttAccounts[i].username,password:mqttAccounts[i].password}\n            //             setTimeout(function(){ \n            //               scope.send({action:\"connect\",broker:broker})\n            //             }, 1000);\n                    \n            //         }\n            //     }\n            // })\n            // divSelect.append(select)\n            var divSelect = $(\"#divSelectMqttAccount\")\n            divSelect.html(\"\")\n            var label =$(\"<label for=\\\"selectMqttAccount\\\">Trainid</label>\")\n            var select =$(\"<select style=\\\"width: 72%;\\\" id=\\\"selectMqttAccount\\\" name=\\\"selectMqttAccount\\\"></select>\")\n            divSelect.append(label)\n            var mqttAccounts=msg.mqttAccounts\n            for(var i=0;i<mqttAccounts.length;i++)\n            {\n                var option = $(\"<option value=\\\"\"+mqttAccounts[i].username+\"\\\">\"+mqttAccounts[i].username+\"</option>\")\n                select.append(option)\n            }\n            select.change(function(){\n                for(var i=0;i<mqttAccounts.length;i++)\n                {\n                    if($('#selectMqttAccount').find(\":selected\").text()==mqttAccounts[i].username)\n                    {\n                        topic.val($('#selectMqttAccount').find(\":selected\").text()+ \"/real-time/event\")\n                        scope.send({action:\"disconnect\"})\n                        var broker={username:mqttAccounts[i].username,password:mqttAccounts[i].password}\n                         $('#selectMqttAccount').prop('disabled', true);\n                        setTimeout(function(){ \n                          scope.send({action:\"connect\",broker:broker})\n                           $('#selectMqttAccount').prop('disabled', false);\n                        }, 1000);\n                    }\n                }\n            })\n            divSelect.append(select)\n            topic.val($('#selectMqttAccount').find(\":selected\").text()+ \"/real-time/event\")\n            }\n    })\n    $(\"#op\").change(() => {\n      if (Option.val() == 0) {\n          document.getElementById('result').style.display = \"none\"\n          divTable.html(\"\")\n        document.getElementById('result').value = \"\";\n        document.getElementById('selectFiles').style.display = \"none\";\n        document.getElementById('import').style.display = \"none\";\n      }\n      else {\n        document.getElementById('selectFiles').style.display = \"\";\n        document.getElementById('import').style.display = \"\";\n        \n      }\n\n    })\n    //--------------------------------------------------------------------------------------------------------------------//\n    // $(\"#import\").click(() => {\n    //   var files = document.getElementById('selectFiles').files;\n\n    //   console.log(files);\n    //   if (files.length <= 0) {\n    //     return false;\n    //   }\n    //   var fr = new FileReader();\n\n    //   fr.onload = function (e) {\n    //     try {\n    //       var result = JSON.parse(e.target.result);\n    //       var formatted = JSON.stringify(result, null, 2);\n    //       alert(\"Import success \");\n    //       arrays = formatted;\n    //     } catch (error) {\n    //       console.log(e);\n    //       alert(error);\n    //     }\n\n    //   }\n\n    //   fr.readAsText(files.item(0));\n\n    // })\n    \n    \n    \n    \n    document.getElementById('import').onclick = function () {\n      var files = document.getElementById('selectFiles').files;\n\n      if (files.length <= 0) {\n        return false;\n      }\n      document.getElementById('result').style.display = \"block\";\n      var fr = new FileReader();\n\n      fr.onload = function (e) {\n        try {\n          var invalidObj = [];\n          var result = JSON.parse(e.target.result);\n            // \"Numeric value\"\n            if(activationTimestamp==null)\n            {\n                invalidObj.push({Field:\"activationTimestamp\",Message:\"activationTimestamp is required object\"}) \n            }else{\n                if(typeof result.activationTimestamp != \"number\"){\n            \t    invalidObj.push({Field:\"activationTimestamp\",Message:\"activationTimestamp must be number\"}) \n                }\n            }\n            \n            if(typeof result.recoveryTimestamp != \"number\")\n            {\n                invalidObj.push({Field:\"recoveryTimestamp\",Message:\"recoveryTimestamp must be number\"})\n            }\n            if(result.logClass.timestampList==null)\n            {\n                invalidObj.push({Field:\"timestampList\",Message:\"timestampList is required object\"})\n            }else{\n                for(var i=0;i<result.logClass.timestampList.length ;i++)\n                {\n                    if(typeof result.logClass.timestampList[i] != \"number\")\n                    {\n                        invalidObj.push({Field:\"timestampList\",Message:\"value \"+i+\" in timestampList must be number\"})\n                    }\n                }\n            }\n            if(result.eventCode==null)\n            {\n                invalidObj.push({Field:\"eventCode\",Message:\"eventCode is required object\"})\n            }else{\n                if(typeof result.eventCode == \"number\"){\n                    invalidObj.push({Field:\"eventCode\",Message:\"eventCode can't be number\"})\n                }\n            }\n            if(result.logClass.signalList==null)\n            {\n                invalidObj.push({Field:\"signalList\",Message:\"signalList is required object\"})\n            }else{\n                for(var i=0;i<result.logClass.signalList.length;i++)\n                {\n                    for(var j=0;j<result.logClass.signalList[i].signalValue.length;j++)\n                    {\n                        if(typeof result.logClass.signalList[i].signalValue[j] != \"number\")\n                        {\n                            invalidObj.push({Field:\"signalList\",Message:\"value \"+i+\" in signalList must be number\"})\n                        }\n                    }\n                }\n            }\n            if(result.logClass.signalList!=null && result.logClass.timestampList!=null)\n            {\n               for(var i =0 ;i <result.logClass.signalList.length;i++)\n                {\n                    if(result.logClass.timestampList.length!=result.logClass.signalList[i].signalValue.length)\n                    {\n                        invalidObj.push({Field:\"signalList\",Message:\"value \"+i+\" in signalList must have same entries with timestampList\"})\n                    }\n                } \n            }\n            \n            var tableInvalid = `\n                                <table style=\"margin-right:250px;width:85%\">\n                                    <thead style=\"background: #212529\">\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">Field</th>\n                                            <th scope=\"col\">Message</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"bodyResult\">\n                                       \n                                    </tbody>\n                                </table>\n                            `\n            divTable.html(tableInvalid)\n            var bodyResult=$('#bodyResult')\n            var resultbody =\"\";\n            for(var i=0;i<invalidObj.length;i++)\n            {\n                resultbody+=`\n                         <tr>\n                            <td scope=\"row\">${i + 1}</td>\n                            <td >${invalidObj[i].Field}</td>\n                            <td>${invalidObj[i].Message}</td>\n                        </tr>\n                    `;\n            }\n            bodyResult.html(resultbody)\n          var formatted = JSON.stringify(result, null, 2);\n          arrays = formatted;\n          document.getElementById('result').style.display = \"\"\n          document.getElementById('result').value = formatted;\n          alert(\"Import success \");\n        } catch (error) {\n          document.getElementById('result').style.display = \"none\"\n          console.log(e);\n          alert(error);\n        }\n\n      }\n\n      fr.readAsText(files.item(0));\n\n    };\n    //-------------------------------------------publish----------------------------------------------------------------------//\n    submitId.click(() => {\n      var timestampLists = [];\n      var signalIdList = [];\n      // var logclasss = [];\n\n      //  get signalId \n      $(\"#buildyourform .fieldwrapper\").each(function () {\n        var temp = $(this).find(\"input.fieldname\").first().val()\n        var divchecked = $(this).children().eq(3)\n        var checked = divchecked.children().eq(1).is(':checked')\n        if(!checked)\n        {\n            if(temp!='')\n            {\n                temp=parseInt(temp)\n            }else{\n                temp=null\n            }\n            \n        }\n        timestampLists.push(temp)\n      });\n      \n      //  get list signalValue  \n      $(\"#buildyourform2 .fieldwrapper\").each(function () {\n        var fieldsetid = $(this).find(\"fieldset\").first().attr('id') // get id fieldset\n        \n        var tam = [] \n       // $(\"#\" + fieldsetid).find(\"input.fieldname\").each(function () {\n       $(\"#\" + fieldsetid).find(\"fieldset\").each(function () {\n        var temp = $(this).find(\"input.fieldname\").first().val()\n        var divChecked = $(this).children().eq(4)\n        var checked = divChecked.children().eq(1).is(':checked')\n        console.log($(this))\n        if(!checked)\n        {\n            if(temp!='')\n            {\n                temp=parseInt(temp) \n            }else{\n                temp=null\n            }\n        }\n        tam.push(temp)\n        \n        //   console.log($(this))\n        //   if (this.value != '') {\n        //     tam.push(parseInt(this.value));\n        //   }\n          // push value input text for array\n        \n        });\n        // if ($(this).find(\"input.fieldname\").first().val() != '') {\n          signalIdList.push({ signalId: $(this).find(\"input.fieldname\").first().val(), signalValue: tam })\n        // }\n      });\n      \n      var isNullLogclass=false;\n      \n      if(checkNullTimestampList.is(':checked') || checkNullSignalList.is(':checked') || (checkNullSignalList.is(':checked')&&checkNullTimestampList.is(':checked')) )\n      {\n          if(checkNullSignalList.is(':checked')&&checkNullTimestampList.is(':checked'))\n          {\n              isNullLogclass=true\n          }\n          if(checkNullTimestampList.is(':checked'))\n          {\n              timestampLists=null;\n          }\n          if(checkNullSignalList.is(':checked'))\n          {\n              signalIdList=null;\n          }\n      }else{\n          for(var i=0;i<signalIdList.length;i++)\n          {\n            if (timestampLists.length != signalIdList[i].signalValue.length) {\n             $(\"#logClasserros\").empty();\n             $(\"#logClasserros\").append(\"List of values of the signal. Must contain the same number of entries as the list of timestamps in LOG_CLASS\");\n            }\n            else {\n             $(\"#logClasserros\").empty();\n            }  \n          }\n      }\n      \n      var logclasss = { timestampList: timestampLists, signalList: signalIdList }\n      \n      \n\n      if (tranid.val() == '' || activationTimestamps.val() == '' || activationTimestamps.val()==null) {\n       errorACtivationTimestamp.text(\"activationTimestamp is required object\")\n      }else{\n          errorACtivationTimestamp.text(\"\")\n      }\n        if (Option.val() == 0) {\n          var activationTimestampTemp=null;\n          var recoveryTimestampTemp=null;\n          var eventCodeTemp=null\n          var timestamp = datetime;\n          \n          \n          if(!isNullLogclass)\n          {\n              if(timestampLists == null || signalIdList == null)\n              {\n                  if(timestampLists==null)\n                      {\n                          errorTimestampList.text(\"timestampList is required object\")\n                      }else{\n                          if(timestampLists.length==0)\n                          {\n                              errorTimestampList.text(\"timestampList is required object\")\n                          }else{\n                              errorTimestampList.text(\"\")\n                          }\n                      }\n                      \n                    if(signalIdList==null)\n                      {\n                          errorSignalList.text(\"signalList is required object\")\n                      }else{\n                           if(signalIdList.length==0)\n                          {\n                              errorSignalList.text(\"signalList is required object\")\n                          }else{\n                              errorSignalList.text(\"\")\n                          }\n                      }\n\n              }else{\n                  if(timestampLists.length==0&&signalIdList.length==0)\n                  {\n                      logclasss={}\n                      errorTimestampList.text(\"\")\n                      errorSignalList.text(\"\")\n                    }else{\n                        \n                        if(timestampLists.length==0)\n                      {\n                          errorTimestampList.text(\"timestampList is required object\")\n                      }else{\n                           errorTimestampList.text(\"\")\n                      }\n                      if(signalIdList.length==0)\n                      {\n                          errorSignalList.text(\"signalList is required object\")\n                      }else{\n                           errorSignalList.text(\"\")\n                      }\n                    }\n                \n              }\n              if(signalIdList!=null)\n              {\n                    for(var i=0;i<signalIdList.length;i++)\n                      { \n                            var index = i+1;\n                            var errorElement = $(\"#errorSignalId\"+index)\n                            if(signalIdList[i].signalId=='' || signalIdList[i].signalId==null)\n                            {\n                                errorElement.text(\"Signal Id value is required\")\n                            }else{\n                                errorElement.text(\"\")\n                            }\n                            if(signalIdList[i].signalValue.length>0)\n                            {\n                                for(var j=0;j<signalIdList[i].signalValue.length;j++)\n                                {\n                                    var indexValue=j+1;\n                                    var signalValueError=$(\"#errorSignalValue\"+index+indexValue);\n                                    if(signalIdList[i].signalValue[j]<0|| signalIdList[i].signalValue[j]>281474976710656)\n                                    {\n                                        signalValueError.text(\"invalid value\")\n                                    }else{\n                                        signalValueError.text(\"\")\n                                    }\n                                }  \n                            }else{\n                                errorElement.text(\"signalValue is required\")\n                            }\n                            \n                      } \n              }\n              \n              if(timestampLists!=null)\n              {\n                for(var i=0;i<timestampLists.length;i++)\n                  { \n                        var index = i+1;\n                        var errorElement = $(\"#errorValueTimestamp\"+index)\n                        if(timestampLists[i]=='' || timestampLists[i]==null)\n                        {\n                            errorElement.text(\"Timestamp value is required\")\n                        }else{\n                            errorElement.text(\"\")\n                        }\n                        if(timestampLists[i]>281474976710656)\n                        {\n                            errorElement.text(\"invalid Value\")\n                        }else{\n                            errorElement.text(\"\")\n                        }\n                  }  \n              }\n          }else{\n            logclasss = null  \n            errorSignalList.text(\"\")\n            errorTimestampList.text(\"\")\n          }\n          \n          \n          if(eventCode.val()=='')\n          {\n                errorEventCode.text(\"Event code is required object\")\n          }else{\n              errorEventCode.text(\"\")\n          }\n          if(!checkPublishNullEventCode.is(\":checked\"))\n          {\n               eventCodeTemp=eventCode.val()\n          }\n          if(activationTimestamps.val()!='')\n          {\n              if(checkPublishStringActTimestamp.is(':checked'))\n              {\n                  activationTimestampTemp=activationTimestamps.val();\n              }else{\n                  activationTimestampTemp=parseInt(activationTimestamps.val());\n              }\n          }else{\n              if(checkPublishStringActTimestamp.is(':checked'))\n              {\n                  activationTimestampTemp=activationTimestamps.val();\n              }\n          }\n          //activationTimestamp check datatype\n          \n          if(recoveryTimestamps.val()!='')\n          {\n              //recoveryTimestamp check datatype\n              if(checkPublishStringRecoveryTimestamp.is(':checked'))\n              {\n                recoveryTimestampTemp=recoveryTimestamps.val();\n              }else{\n                  recoveryTimestampTemp=parseInt(recoveryTimestamps.val());\n              }\n          }\n          \n          if(Timestamp.val()!='')\n          {\n              timestamp=Timestamp.val()\n          }\n\n          if(activationTimestamps.val()<0|| activationTimestamps.val()>281474976710656)\n          {\n              errorACtivationTimestamp.text(\"invalid value\")\n          }\n          if(recoveryTimestamps.val()<0 || recoveryTimestamps.val()>281474976710656)\n          {\n              errorRecoveryTimestamp.text(\"invalid value\")\n          }\n          var template = /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9]{1,3}$/;\n          if(!template.test(timestamp))\n          {\n              timestampError.text(\"Wrong format\")\n          }else{\n              timestampError.text(\"\")\n          }\n          scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: { ts: timestamp, eventCode: eventCodeTemp, activationTimestamp: activationTimestampTemp\n          , recoveryTimestamp: recoveryTimestampTemp, logClass: logclasss, vehicleId: parseInt(vehicleIds.val()), subVehicleId: parseInt(subVehicleIds.val()), maintenanceMode: parseInt(maintenanceModes.val()) } })\n          alert(\"success\")\n         \n        }\n        else {\n            console.log(arrays)\n          if(arrays==null)\n          {\n            alert(\"import JSON File\")\n          }\n          else\n          {\n            var result = document.getElementById('result').value\n            scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: JSON.parse(result)})\n            alert(\"success\")\n          }\n       \n        }\n     \n      })\n    })(scope)\n  </script>\n</body>\n\n</html>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "617476a25692f929",
                "d0de86eff1fa1efd",
                "148ed9df95aa3740",
                "54abc6e728ab0ff2"
            ]
        ]
    },
    {
        "id": "617476a25692f929",
        "type": "ui_template",
        "z": "4abd57f3c7defcac",
        "group": "1ef1620d2cd48805",
        "name": "Message send  to Application",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Employment Verification Form</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\"\n    integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossorigin=\"anonymous\">\n  <style>\n    table {\n      width: 750px;\n      border-collapse: collapse;\n      margin: 50px auto;\n    }\n\n    /* Zebra striping */\n    tr:nth-of-type(odd) {\n      background: #eee;\n    }\n\n    th {\n      background: #3498db;\n      color: white;\n      font-weight: bold;\n    }\n\n    td,\n    th {\n      padding: 10px;\n      border: 1px solid #ccc;\n      text-align: left;\n      font-size: 18px;\n    }\n\n    /* \nMax width before this PARTICULAR table gets nasty\nThis query will take effect for any screen smaller than 760px\nand also iPads specifically.\n*/\n    @media only screen and (max-width: 760px),\n    (min-device-width: 768px) and (max-device-width: 1024px) {\n\n      table {\n        width: 100%;\n      }\n\n      /* Force table to not be like tables anymore */\n      table,\n      thead,\n      tbody,\n      th,\n      td,\n      tr {\n        display: block;\n      }\n\n      /* Hide table headers (but not display: none;, for accessibility) */\n      thead tr {\n        position: absolute;\n        top: -9999px;\n        left: -9999px;\n      }\n\n      tr {\n        border: 1px solid #ccc;\n      }\n\n      td {\n        /* Behave  like a \"row\" */\n        border: none;\n        border-bottom: 1px solid #eee;\n        position: relative;\n        padding-left: 50%;\n      }\n\n      td:before {\n        /* Now like a table header */\n        position: absolute;\n        /* Top/left values mimic padding */\n        top: 6px;\n        left: 6px;\n        width: 45%;\n        padding-right: 10px;\n        white-space: nowrap;\n        /* Label the data */\n        content: attr(data-column);\n\n        color: #000;\n        font-weight: bold;\n      }\n\n    }\n    th {\n    background: black;\n    color: white;\n    font-weight: bold;\n}\n\n\n  </style>\n</head>\n<body>\n  <h3 style=\"text-align: center;text-transform: capitalize;\">Message send to Application</h4>\n     <table style=\"width:790px\">\n      <thead>\n        <tr>\n         \n          <th>ts</th>\n          <th>eventCode</th>\n          <th>activationTimestamp</th>\n          <th>recoveryTimestamp</th>\n          <th>logClass</th>\n           <th>vehicleId</th>\n          <th>subVehicleId</th>\n           <th>maintenanceMode</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n   \n          <td>{{msg.payload.ts}}</td>\n          <td>{{msg.payload.eventCode}}</td>\n          <td>{{msg.payload.activationTimestamp}}</td>\n          <td>{{msg.payload.recoveryTimestamp}}</td>\n          <td>{{msg.payload.logClass}}</td>\n          <td>{{msg.payload.vehicleId}}</td>\n          <td>{{msg.payload.subVehicleId}}</td>\n          <td>{{msg.payload.maintenanceMode}}</td>\n        </tr>\n\n      </tbody>\n    </table>\n</body>\n\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 920,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d0de86eff1fa1efd",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "",
        "func": "const REAL_TIME_EVENT_PAYLOAD_KEY = \"real_time_event_payload_key\";\n/**\n* Write payload to log array\n* @param {*} timestamp\n* @param {*} topic\n* @param {*} qos\n* @param {*} retain\n* @param {*} payload\n*/\nfunction writeToLog(timestamp, topic, qos, retain, payload, type) {\nvar payloadArray = global.get(REAL_TIME_EVENT_PAYLOAD_KEY) || [];\n\n\n\npayloadArray.push({\ntimestamp,\ntopic,\nqos,\nretain,\npayload,\ntype\n});\n\nnode.warn(topic)\n\nglobal.set(REAL_TIME_EVENT_PAYLOAD_KEY, payloadArray);\n}\n\n/**\n* get current date time\n* @returns date time format dd/mm/yyyy\n*/\nfunction getCurrentDate() {\nvar myDate = new Date(Date.now());\nreturn (myDate.getFullYear() + '-' + ('0' + (myDate.getMonth() + 1)).slice(-2) + '-' + ('0' + myDate.getDate()).slice(-2) + ' ' + myDate.getHours() + ':' + ('0' + (myDate.getMinutes())).slice(-2) + ':' + myDate.getSeconds() + \".\" + myDate.getMilliseconds());\n}\n\nwriteToLog(getCurrentDate(), msg.topic, msg.qos, msg.retainFlag, msg.payload, \"publish\");\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 280,
        "wires": [
            [
                "e3df2fbaac3661a6"
            ]
        ]
    },
    {
        "id": "4dfd1f8d5a90064e",
        "type": "inject",
        "z": "4abd57f3c7defcac",
        "name": "Get log",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 290,
        "y": 1320,
        "wires": [
            [
                "9dd2c0b112aa43c9"
            ]
        ]
    },
    {
        "id": "9dd2c0b112aa43c9",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "",
        "func": "node.warn(global.get(\"real_time_event_payload_key\") || [])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "81a80f5ea8691b7d",
        "type": "inject",
        "z": "4abd57f3c7defcac",
        "name": "Clear log",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 300,
        "y": 1380,
        "wires": [
            [
                "360b42a444ebc0ce"
            ]
        ]
    },
    {
        "id": "360b42a444ebc0ce",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "",
        "func": "global.set(\"real_time_event_payload_key\",[]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "40a42d4fefb22bf3",
        "type": "http in",
        "z": "4abd57f3c7defcac",
        "name": "",
        "url": "/realtime-event.log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 1020,
        "wires": [
            [
                "d9b26b9131e08c39"
            ]
        ]
    },
    {
        "id": "d9b26b9131e08c39",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "handle get log realtime ",
        "func": "try{\n    var log = global.get(\"real_time_event_payload_key\") ||[];\n    msg.payload ={};\n    // msg.payload.status =true;\n    \n    let logString = \"\";\n    log.forEach((v,i)=>{\n            logString += `${v.timestamp} ${v.type} message topic: ${v.topic} payload : ${JSON.stringify(v.payload)} qos: ${v.qos} retain : ${v.retain} </br>`;\n    })\n    msg.payload = logString;\n    return msg;\n}catch(e){\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1020,
        "wires": [
            [
                "6e88cc0362c38075"
            ]
        ]
    },
    {
        "id": "6e88cc0362c38075",
        "type": "http response",
        "z": "4abd57f3c7defcac",
        "name": "response",
        "statusCode": "",
        "headers": {},
        "x": 980,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3f109646be1ea37b",
        "type": "comment",
        "z": "4abd57f3c7defcac",
        "name": "get log real time data",
        "info": "",
        "x": 340,
        "y": 980,
        "wires": []
    },
    {
        "id": "83fbc54c7a025309",
        "type": "http in",
        "z": "4abd57f3c7defcac",
        "name": "",
        "url": "/realtime-event-clear-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 1140,
        "wires": [
            [
                "d2b56d96495d51d8"
            ]
        ]
    },
    {
        "id": "d2b56d96495d51d8",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "Hanle Clear log",
        "func": "try{\n    var log = global.get(\"real_time_event_payload_key\") ||[];\n    msg.payload ={};\n    // msg.payload.status =true;\n    \n    msg.payload.data = log;\n    global.set(\"real_time_event_payload_key\",[]);\n    \n    return msg;\n}catch(e){\n    msg.payload ={};\n    msg.payload.status = false;\n    \n    msg.payload.error = e + \"\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1140,
        "wires": [
            [
                "479ed92a1c668998"
            ]
        ]
    },
    {
        "id": "479ed92a1c668998",
        "type": "http response",
        "z": "4abd57f3c7defcac",
        "name": "response",
        "statusCode": "",
        "headers": {},
        "x": 960,
        "y": 1140,
        "wires": []
    },
    {
        "id": "e02ead8e1261b2f1",
        "type": "comment",
        "z": "4abd57f3c7defcac",
        "name": "clear log real time data",
        "info": "",
        "x": 320,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5c529c20a293e2cd",
        "type": "inject",
        "z": "4abd57f3c7defcac",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "real_time_event_payload_key",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 140,
        "wires": [
            [
                "148ed9df95aa3740"
            ]
        ]
    },
    {
        "id": "148ed9df95aa3740",
        "type": "debug",
        "z": "4abd57f3c7defcac",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 160,
        "wires": []
    },
    {
        "id": "54abc6e728ab0ff2",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "",
        "func": "if(msg.message)\n{\n    node.send({msg})\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 200,
        "wires": [
            [
                "ad0a4b0949d50b7e"
            ]
        ]
    },
    {
        "id": "ad0a4b0949d50b7e",
        "type": "debug",
        "z": "4abd57f3c7defcac",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "c07d718c96ec65e2",
        "type": "complete",
        "z": "4abd57f3c7defcac",
        "name": "",
        "scope": [
            "ad0a4b0949d50b7e"
        ],
        "uncaught": false,
        "x": 70,
        "y": 340,
        "wires": [
            [
                "cb992e8f31f2332e"
            ]
        ]
    },
    {
        "id": "cb992e8f31f2332e",
        "type": "function",
        "z": "4abd57f3c7defcac",
        "name": "",
        "func": "let test = context.global.MQTTAccounts\n\nmsg.mqttAccounts = test;\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 340,
        "wires": [
            [
                "a503bd71b752d598"
            ]
        ]
    },
    {
        "id": "8af5f58a03934c8d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${MQTT_SERVER}",
        "port": "${MQTT_PORT}",
        "clientid": "${MQTT_CLIENTID}",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "1",
        "willRetain": "true",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "527ba5970a1962c3",
        "type": "ui_group",
        "name": "PUBLISH Real time event",
        "tab": "8cd6b1f90ddae8f1",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "1ef1620d2cd48805",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "8cd6b1f90ddae8f1",
        "order": 2,
        "disp": false,
        "width": "22",
        "collapse": false
    },
    {
        "id": "8cd6b1f90ddae8f1",
        "type": "ui_tab",
        "name": "3.4.11  OBS - Real Time Events",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    }
]