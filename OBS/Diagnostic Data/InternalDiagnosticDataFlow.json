[
    {
        "id": "24235853ed2aee05",
        "type": "tab",
        "label": "3.4.4 OBS-InternalDiagnosticData",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e923f1b39ba980e1",
        "type": "ui_template",
        "z": "24235853ed2aee05",
        "group": "3fa077bb75ee08c4",
        "name": "Publish",
        "order": 1,
        "width": "25",
        "height": "23",
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Employment Verification Form</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\"\n        integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n    <style>\n        html,\n        body {\n            min-height: 100%;\n        }\n\n        .or-seperator {\n            margin-top: 20px;\n            text-align: center;\n            border-top: 1px solid #ccc;\n        }\n\n        .or-seperator i {\n            cursor: pointer;\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n            transition: 0.4s;\n\n        }\n\n        .or-seperator i:hover {\n            background: #dbdada;\n\n\n        }\n\n        .or-seperator i.arrow {\n            padding: 0 10px;\n            background: #f7f7f7;\n            position: relative;\n            top: -11px;\n            z-index: 1;\n\n        }\n        body,\n        div,\n        form,\n        input,\n        label {\n            padding: 0;\n            margin: 0;\n            outline: none;\n            font-family: Roboto, Arial, sans-serif;\n            font-size: 13px;\n            color: #666;\n            line-height: 22px;\n        }\n\n        legend {\n            color: #fff;\n            background-color: #212529;\n            border-color: #32383e;\n            padding: 3px 5px;\n            font-size: 20px;\n        }\n\n        h1 {\n            margin: 0;\n            font-size: 36px;\n            color: #fff;\n            z-index: 2;\n        }\n\n        .testbox {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: inherit;\n            padding: 20px;\n        }\n\n        form {\n            width: 100%;\n            padding: 20px;\n            border-radius: 6px;\n            background: #fff;\n            box-shadow: 0 0 20px 0 #095484;\n        }\n\n        .banner {\n            position: relative;\n            height: 320px;\n            background-image: url(\"/uploads/media/default/0001/02/19ea6ba00def11fb8f5113a4d7555a97bd58ce3d.jpeg\");\n            background-size: cover;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n        }\n\n        .banner::after {\n            content: \"\";\n            background-color: rgba(0, 0, 0, 0.6);\n            position: absolute;\n            width: 100%;\n            height: 100%;\n        }\n\n        input {\n            margin-bottom: 10px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n        }\n\n        input {\n            width: calc(100% - 10px);\n            padding: 5px;\n        }\n\n        select {\n            width: 100%;\n            padding: 7px 0;\n            background: transparent;\n        }\n\n        input[type=\"date\"] {\n            padding: 4px 5px;\n        }\n\n        .item:hover p,\n        .item:hover i,\n        .question:hover p,\n        .question label:hover,\n        input:hover::placeholder {\n            color: #095484;\n        }\n\n        .item input:hover {\n            border: 1px solid transparent;\n            box-shadow: 0 0 6px 0 #095484;\n            color: #095484;\n        }\n\n        .item {\n            position: relative;\n            margin: 10px 0;\n        }\n\n        .item span {\n            color: red;\n        }\n\n        input[type=\"date\"]::-webkit-inner-spin-button {\n            display: none;\n        }\n\n        .item i,\n        input[type=\"date\"]::-webkit-calendar-picker-indicator {\n            position: absolute;\n            font-size: 20px;\n            color: #095484;\n        }\n\n        .item i {\n            right: 2%;\n            top: 30px;\n            z-index: 1;\n        }\n\n        [type=\"date\"]::-webkit-calendar-picker-indicator {\n            right: 1%;\n            z-index: 2;\n            opacity: 0;\n            cursor: pointer;\n        }\n\n        .question span {\n            margin-left: 30px;\n        }\n\n        .btn-block {\n            margin-top: 10px;\n            text-align: center;\n\n        }\n        \n        .btn-clear{\n            margin-left: 10px;\n            height: 35px;\n            background: #FF0000;\n        }\n        \n        button {\n            width: 150px;\n            padding: 10px;\n            border: none;\n            border-radius: 5px;\n            background: #095484;\n            font-size: 16px;\n            color: #fff;\n            cursor: pointer;\n            background-color: #28a745;\n            border-color: #28a745;\n        }\n\n        button:hover {\n            background: #28a745;\n        }\n\n        @media (min-width: 568px) {\n\n            .name-item,\n            .city-item {\n                display: flex;\n                flex-wrap: wrap;\n                justify-content: space-between;\n            }\n\n            .name-item input,\n            .city-item input,\n            .name-item div {\n                width: calc(50% - 20px);\n            }\n\n            .name-item div input {\n                width: 97%;\n            }\n\n            .name-item div label {\n                display: block;\n                padding-bottom: 5px;\n            }\n        }\n\n        .input,\n        .textarea {\n            border: 1px solid #ccc;\n            font-family: inherit;\n            font-size: inherit;\n            padding: 1px 6px;\n        }\n\n        .table {\n            width: 100%;\n            max-width: 100%;\n            margin-bottom: 1rem;\n            background-color: transparent;\n        }\n\n        table {\n            border-collapse: collapse;\n        }\n\n        *,\n        ::after,\n        ::before {\n            box-sizing: border-box;\n        }\n\n        table {\n            display: table;\n            border-collapse: separate;\n            box-sizing: border-box;\n            text-indent: initial;\n            border-spacing: 2px;\n            border-color: grey;\n        }\n\n        thead {\n            display: table-header-group;\n            vertical-align: middle;\n            border-color: inherit;\n        }\n\n        table {\n            border-collapse: collapse;\n        }\n\n        table {\n            border-collapse: separate;\n            text-indent: initial;\n            border-spacing: 2px;\n        }\n\n        .table .thead-dark th {\n            color: #fff;\n            background-color: #212529;\n            border-color: #32383e;\n        }\n\n        .table thead th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #dee2e6;\n        }\n\n        .table td,\n        .table th {\n            padding: .75rem;\n            vertical-align: top;\n            border-top: 1px solid #dee2e6;\n        }\n\n        th {\n            text-align: inherit;\n        }\n\n       \n\n        .table .thead-dark th {\n            color: #fff;\n            background-color: #212529;\n            border-color: #32383e;\n        }\n\n        .table thead th {\n            vertical-align: bottom;\n            border-bottom: 2px solid #dee2e6;\n        }\n\n        .table td,\n        .table th {\n            padding: .75rem;\n            vertical-align: top;\n            border-top: 1px solid #dee2e6;\n        }\n\n        th {\n            text-align: inherit;\n        }\n\n        *,\n        ::after,\n        ::before {\n            box-sizing: border-box;\n        }\n\n        user agent stylesheet th {\n            display: table-cell;\n            vertical-align: inherit;\n            font-weight: bold;\n            text-align: -internal-center;\n        }\n        .help-block {\n            display: block;\n            margin-top: 2px;\n            margin-bottom: 10px;\n            color: #a94442;\n            font-size: 15px;\n        }\n        table {\n    border-collapse: collapse;\n}\n    </style>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.14.5/xlsx.full.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n    <script>\n       \n    </script>\n</head>\n\n<body>\n    <div style=\"margin-left:250px\">\n      <h3 style=\"text-align: center;text-transform: capitalize;margin-right: 260px\">Publish message to topic diag/status</h3>\n    <div class=\"testbox\" style=\"padding-bottom:100px;display: flex\">\n        <form style=\"height:1000px;display: block; overflow: auto;\" id=\"myForm\">\n            <fieldset>\n                <legend>MQTT</legend>\n                <div class=\"name-item\">\n                    <div>\n                        <label for=\"tranid\">Tranid</label>\n                        <input style=\"width: 72%;\" id=\"tranid\" type=\"text\" name=\"topic\" required />\n                    </div>\n\n                    <div>\n                        <label for=\"topic\">Topic</label>\n                        <input style=\"width: 72%;\" id=\"topic\" type=\"text\" readonly placeholder=\"/diag/status\"\n                            name=\"topic\" required />\n                    </div>\n                </div>\n                <div class=\"item\">\n                    <div class=\"item\">\n                        <div class=\"name-item\">\n                            <div>\n                                <label for=\"Qos\">Qos</label>\n                                <select style=\"width: 73%;\" id=\"qos\" name=\"qos\" required>\n                                    \n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option selected value=\"2\">2</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label for=\"retainFlag\">RetainFlag</label>\n                                <select style=\"width: 73%;\" id=\"retainFlag\" , name=\"retainFlag\" required>\n                                    <option value=\"true\">True</option>\n                                    <option selected value=\"false\">False</option>\n                                </select>\n                            </div>\n                            <div>\n                                <label for=\"retainFlag\">Options</label>\n                                <select style=\"width: 73%;\" id=\"options\" , name=\"options\" required>\n                                    <option value=\"0\">Publish</option>\n                                    <option selected value=\"1\">Publish When OBS Connect MQTT</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n            <br />\n            <fieldset id=\"manualPublish\">\n                <legend>Payload</legend>\n                <br />\n                <div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inObsHealth\">ObsHealth</label>\n                            <input style=\"width: 72%;\" id=\"inObsHealth\" type=\"number\"\n                                name=\"inObsHealth\" placeholder=\"ObsHealth must between 0 and 255\"/>\n                            <h5 class=\"help-block\" id=\"inObsHealthError\"></h5>\n                        </div>\n                        <div>\n                            <label for=\"inHardwareFailures\">HardwareFailures</label>\n                            <input style=\"width: 72%;\" id=\"inHardwareFailures\" type=\"number\"\n                                name=\"inHardwareFailures\" placeholder=\"HardwareFailures must between 0 and 255\" />\n                            <h5 class=\"help-block\" id=\"inHardwareFailuresError\"></h5>\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inSoftwareFailures\">SoftwareFailures</label>\n                            <input style=\"width: 72%;\" id=\"inSoftwareFailures\" type=\"number\" name=\"inSoftwareFailures\" placeholder=\"SoftwareFailures must between 0 and 255\" />\n                            <h5 class=\"help-block\" id=\"inSoftwareFailuresError\"></h5>\n                        </div>\n    \n                        <div>\n                            <label for=\"inGpsLatitude\">GpsLatitude</label>\n                            <input style=\"width: 72%;\" id=\"inGpsLatitude\" type=\"number\" step=\"0.000000000001\"\n                                name=\"inGpsLatitude\" />\n                            <h5 class=\"help-block\" id=\"inGpsLatitudeError\"></h5>\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inGpsLongitude\">GpsLongitude</label>\n                            <input style=\"width: 72%;\" step=\"0.000000000001\" id=\"inGpsLongitude\" type=\"number\" name=\"inGpsLongitude\" />\n                            <h5 class=\"help-block\" id=\"inGpsLongitudeError\"></h5>\n                        </div>\n    \n                        <div>\n                            <label for=\"inTrainConnectionStatus\">TrainConnectionStatus</label>\n                            <select style=\"width: 73%;\" id=\"inTrainConnectionStatus\" name=\"inTrainConnectionStatus\">\n                                <option value=\"\">empty</option>\n                                <option value=\"0\">0 : N/A</option>\n                                <option value=\"1\">1 : OK</option>\n                                <option selected value=\"2\">2 : Connection Error</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inTrainNetworkStatus\">TrainNetworkStatus</label>\n                            <select style=\"width: 73%;\" id=\"inTrainNetworkStatus\" name=\"inTrainNetworkStatus\">\n                                <option value=\"\">empty</option>\n                                <option value=\"0\">0 : N/A</option>\n                                <option value=\"1\">1 : Modem 1 - 3G/4G</option>\n                                <option selected value=\"2\">2 : Modem 2 - 3G/4G</option>\n                                <option value=\"1\">3 : Modem 1 and 2 - 3G/4G</option>\n                                <option value=\"1\">4 : Wifi</option>\n                                <option value=\"1\">5 : Wifi and Modem 1</option>\n                                <option value=\"1\">6 : Wifi and Modem 2</option>\n                                <option value=\"1\">7 : Wifi and Modem 1 and 2</option>\n                            </select>\n                        </div>\n    \n                        <div>\n                            <label for=\"inStorageUsage\">StorageUsage</label>\n                            <input style=\"width: 72%;\" id=\"inStorageUsage\" type=\"number\"\n                                name=\"inStorageUsage\" placeholder=\"StorageUsage must between 0 and 100\" />\n                            <h5 class=\"help-block\" id=\"inStorageUsageError\"></h5>\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inCpuUsage\">CpuUsage</label>\n                            <input style=\"width: 72%;\" id=\"inCpuUsage\" type=\"number\" name=\"inCpuUsage\" placeholder=\"CpuUsage must between 0 and 100\" />\n                            <h5 class=\"help-block\" id=\"inCpuUsageError\"></h5>\n                        </div>\n    \n                        <div>\n                            <label for=\"inRamUsage\">RamUsage</label>\n                            <input style=\"width: 72%;\" id=\"inRamUsage\" type=\"number\"\n                                name=\"inRamUsage\" placeholder=\"ObsHealth must between 0 and 100\" />\n                            <h5 class=\"help-block\" id=\"inRamUsageError\"></h5>\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inPrimaryCertChecksum\">PrimaryCertChecksum</label>\n                            <input style=\"width: 72%;\" id=\"inPrimaryCertChecksum\" type=\"text\" name=\"inPrimaryCertChecksum\" />\n                        </div>\n    \n                        <div>\n                            <label for=\"inSecondaryCertChecksum\">SecondaryCertChecksum</label>\n                            <input style=\"width: 72%;\" id=\"inSecondaryCertChecksum\" type=\"text\"\n                                name=\"inSecondaryCertChecksum\" />\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inCertInuse\">CertInuse</label>\n                            <select style=\"width: 73%;\" id=\"inCertInuse\" name=\"inCertInuse\">\n                                <option value=\"\">empty</option>\n                                <option value=\"0\">0 : N/A</option>\n                                <option value=\"1\">1 : primary in Use</option>\n                                <option selected value=\"2\">2 : secondary in use </option>\n                            </select>\n                        </div>\n                        <div>\n                            <label for=\"inSecondaryCertTestResult\">SecondaryCertTestResult</label>\n                            <select style=\"width: 73%;\" id=\"inSecondaryCertTestResult\" name=\"inSecondaryCertTestResult\">\n                                <option value=\"\">empty</option>\n                                <option value=\"0\">0 : N/A</option>\n                                <option value=\"1\">1 : Passed</option>\n                                <option selected value=\"2\">2 : Failed</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"name-item\">\n                        <div>\n                            <label for=\"inPrimaryCertExpiryDate\">PrimaryCertExpiryDate</label>\n                            <input style=\"width: 72%;\" id=\"inPrimaryCertExpiryDate\" type=\"number\" name=\"inPrimaryCertExpiryDate\" />\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n            <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"or-seperator\">\n                    <i id=\"config-label\">Optional Config\n                        <span class=\"arrow\">&#8659;</span>\n                    </i>\n\n\n                </div>\n            </div>\n        </div>\n            <fieldset id=\"result\" style=\"display:none\">\n                <legend>Choose a file</legend>\n                <div style=\"display:flex\">\n                    <input style=\"width:200px\" type=\"file\" id=\"input\" accept=\".xls,.xlsx,.ods\">\n                    <button class=\"btn-clear\" id=\"btnClear\">clear</button>\n                     <div style=\"margin-left:50px\">\n                        <label for=\"inTimeout\">Time out</label>\n                        <input style=\"width: 72%;\" id=\"inTimeout\" type=\"text\"\n                            name=\"inTimeout\"/>\n                    </div>\n                    \n                </div>\n                <div id=\"divTable\">\n                    \n                </div>\n            </fieldset>\n            <br />\n            <div class=\"btn-block\">\n                <button id=\"submit\">Publish</button>\n            </div>\n        </form>\n        <br />\n    </div>\n  \n    </div>\n    \n    <script src=\"https://code.jquery.com/jquery-3.6.0.js\"\n        integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\">\n        </script>\n    <script>\n        (function (scope) {\n            \n            var topic = $(\"#topic\");\n            var options = $(\"#options\");\n            var divTable=$(\"#divTable\")\n            var btnImport = $(\"#btnImport\")\n            var tranid = $(\"#tranid\");\n            var Result = $(\"#result\");\n            var qos = $(\"#qos\");\n            var retainFlag = $('#retainFlag');\n            var submitId = $(\"#submit\");\n            var inTimeout = $(\"#inTimeout\")\n            var table = $(\"#table\")\n            var btnClear=$(\"#btnClear\")\n            var btnOptionalConfig=$(\"#config-label\")\n            var inPrimaryCertExpiryDate = $(\"#inPrimaryCertExpiryDate\")\n            var inSecondaryCertTestResult = $(\"#inSecondaryCertTestResult\")\n            var inCertInuse = $(\"#inCertInuse\")\n            var inSecondaryCertChecksum = $(\"#inSecondaryCertChecksum\")\n            var inPrimaryCertChecksum = $(\"#inPrimaryCertChecksum\")\n            var inRamUsage = $(\"#inRamUsage\")\n            var inCpuUsage = $(\"#inCpuUsage\")\n            var inStorageUsage = $(\"#inStorageUsage\")\n            var inTrainNetworkStatus =$(\"#inTrainNetworkStatus\")\n            var inGpsLongitude = $(\"#inGpsLongitude\")\n            var inSoftwareFailures = $(\"#inSoftwareFailures\")\n            var inGpsLatitude = $(\"#inGpsLatitude\")\n            var inHardwareFailures = $(\"#inHardwareFailures\")\n            var inObsHealth = $(\"#inObsHealth\")\n            var inTrainConnectionStatus  = $(\"#inTrainConnectionStatus\")\n            var arrPayloadObj=[]\n            var arrPayloadObjToSend=[]\n            var invalidPayloadObj=[]\n            var invalidPayloadObjManual=[]\n            var isFilePublish = false;\n            function parseJsonToPayload(result){\n                var count = result[0].length;\n                \n                for(var i=2;i<count;i++)\n                {\n                    \n                    var PayloadObj={}\n                    var PayloadObjtoSend={}\n                    for(var j=1;j<result.length;j++)\n                    {\n                        if(result[j][i]!=undefined)\n                        {\n                            var value;\n                            switch(result[j][1]){\n                                case \"int\":\n                                    value = parseInt(result[j][i])\n                                    if(isNaN(value))\n                                    {\n                                        invalidPayloadObj.push({\n                                        CurValue: result[j][i],\n                                        CurType: result[j][1],\n                                        Message: result[j][0] + \" \"+ result[0][i] + \" is invalid value\"\n                                        })\n                                    }\n                                    break;\n                                case \"double\":\n                                    value = parseFloat(result[j][i])\n                                    if(isNaN(value))\n                                    {\n                                        invalidPayloadObj.push({\n                                        CurValue: result[j][i],\n                                        CurType: result[j][1],\n                                        Message: result[j][0] + \" \"+ result[0][i] + \" is invalid value\"\n                                        })\n                                    }\n                                    break;\n                                default:\n                                    value = result[j][i]\n                                    \n                            }\n                            if(result[j][0]==\"obsHealth\" && value>255|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 255\"\n                                })\n                            }\n                            \n                            if(result[j][0]==\"hardwareFailures\" && value>255|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 255\"\n                                })\n                            }\n                            \n                            if(result[j][0]==\"softwareFailures\" && value>255|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 255\"\n                                })\n                            }\n                            \n                            if(result[j][0]==\"trainConnectionStatus\" && value>2|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 2\"\n                                })\n                            }\n                            \n                            if(result[j][0]==\"trainNetworkStatus\" && value>7|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 7\"\n                                })\n                            }\n                            \n                             if(result[j][0]==\"storageUsage\" && value>100|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 100\"\n                                })\n                            }\n                            \n                             if(result[j][0]==\"ramUsage\" && value>100|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 100\"\n                                })\n                            }\n                            \n                             if(result[j][0]==\"cpuUsage\" && value>100|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 100\"\n                                })\n                            }\n                            \n                             if(result[j][0]==\"certInUse\" && value>2|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 2\"\n                                })\n                            }\n                            \n                             if(result[j][0]==\"secondaryCertTestResult\" && value>2|| value<0)\n                            {\n                                invalidPayloadObj.push({\n                                    CurValue: result[j][i],\n                                    CurType: result[j][1],\n                                    Message: result[j][0] + \" \"+ result[0][i] + \" must between 0 and 2\"\n                                })\n                            }\n                            var tempObj ={\n                                [result[j][0]]:value\n                            }\n                            Object.assign(PayloadObjtoSend,tempObj)\n                            Object.assign(PayloadObj,tempObj)\n                        }else{\n                            var tempObj ={\n                                [result[j][0]]:\"\"\n                            }\n                            Object.assign(PayloadObj,tempObj)\n                        }\n                    }\n                    arrPayloadObjToSend.push(PayloadObjtoSend)\n                    arrPayloadObj.push(PayloadObj)\n                }\n                console.log(arrPayloadObj.length)\n                if(invalidPayloadObj.length==0)\n                {\n                    alert(\"upload excel file succes!\")\n                }else{\n                    alert(\"failed to upload excel file!\")\n                }\n            }\n            var showInvalidInput = (field, errorContent) => {\n                console.log(field)\n                document.getElementById(field).innerHTML = errorContent\n            }\n            var hideInvalidInput = (field) => {\n                document.getElementById(field).innerHTML = \"\"\n            }\n            $(\"#input\").on(\"change\", function (e) {\n            \n              var file = e.target.files[0];\n              // input canceled, return\n              \n              if (!file) return;\n              divTable.html(\"\")\n              invalidPayloadObj=[]\n              arrPayloadObj=[]\n              var FR = new FileReader();\n              FR.onload = function(e) {\n                var data = new Uint8Array(e.target.result);\n                var workbook = XLSX.read(data, {type: 'array'});\n                var firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n                 \n                // header: 1 instructs xlsx to create an 'array of arrays'\n                var result = XLSX.utils.sheet_to_json(firstSheet, { header: 1 });\n                parseJsonToPayload(result)\n                if(invalidPayloadObj.length==0)\n                {\n                    \n                    var tableSuccess = `\n                                <table id=\"table\" style=\"margin-right:250px;width:85%\">\n                                    <thead style=\"background: #212529\">\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">obsHealth</th>\n                                            <th scope=\"col\">hardwareFailures</th>\n                                            <th scope=\"col\">softwareFailures</th>\n                                            <th scope=\"col\">gpsLatitude</th>\n                                            <th scope=\"col\">gpsLongitude</th>\n                                            <th scope=\"col\">trainConnectionStatus</th>\n                                            <th scope=\"col\">trainNetworkStatus</th>\n                                            <th scope=\"col\">storageUsage</th>\n                                            <th scope=\"col\">cpuUsage</th>\n                                            <th scope=\"col\">ramUsage</th>\n                                            <th scope=\"col\">primaryCertChecksum</th>\n                                            <th scope=\"col\">secondaryCertChecksum</th>\n                                            <th scope=\"col\">certInUse</th>\n                                            <th scope=\"col\">secondaryCertTestResult</th>\n                                            <th scope=\"col\">primaryCertExpiryDate</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"bodyResult\">\n                                       \n                                    </tbody>\n                                </table>\n                            `\n                    divTable.html(tableSuccess) \n                    var bodyResult=$('#bodyResult')\n                    var resultbody =\"\";\n                    for(var i=0;i<arrPayloadObj.length;i++)\n                    {\n                        resultbody+=`\n                                 <tr>\n                                    <td scope=\"row\">${i + 1}</td>\n                                    <td>${arrPayloadObj[i].obsHealth}</td>\n                                    <td>${arrPayloadObj[i].hardwareFailures}</td>\n                                    <td>${arrPayloadObj[i].softwareFailures}</td>\n                                    <td>${arrPayloadObj[i].gpsLatitude}</td>\n                                    <td>${arrPayloadObj[i].gpsLongitude}</td>\n                                    <td>${arrPayloadObj[i].trainConnectionStatus}</td>\n                                    <td>${arrPayloadObj[i].trainNetworkStatus}</td>\n                                    <td>${arrPayloadObj[i].storageUsage}</td>\n                                    <td>${arrPayloadObj[i].cpuUsage}</td>\n                                    <td>${arrPayloadObj[i].ramUsage}</td>\n                                    <td>${arrPayloadObj[i].primaryCertChecksum}</td>\n                                    <td>${arrPayloadObj[i].secondaryCertChecksum}</td>\n                                    <td>${arrPayloadObj[i].certInUse}</td>\n                                    <td>${arrPayloadObj[i].secondaryCertTestResult}</td>\n                                    <td>${arrPayloadObj[i].primaryExpiryDate}</td>\n                                </tr>\n                            `;\n                    }\n                    bodyResult.html(resultbody)\n                    console.log(arrPayloadObj)\n                }else{\n                    var tableInvalid = `\n                                <table style=\"margin-right:250px;width:85%\">\n                                    <thead style=\"background: #212529\">\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">CurValue</th>\n                                            <th scope=\"col\">CurType</th>\n                                            <th scope=\"col\">Message</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"bodyResult\">\n                                       \n                                    </tbody>\n                                </table>\n                            `\n                    divTable.html(tableInvalid) \n                    var bodyResult=$('#bodyResult')\n                    var resultbody =\"\";\n                    for(var i=0;i<invalidPayloadObj.length;i++)\n                    {\n                        resultbody+=`\n                                 <tr>\n                                    <td scope=\"row\">${i + 1}</td>\n                                    <td >${invalidPayloadObj[i].CurValue}</td>\n                                    <td>${invalidPayloadObj[i].CurType}</td>\n                                    <td>${invalidPayloadObj[i].Message}</td>\n                                </tr>\n                            `;\n                    }\n                    bodyResult.html(resultbody)\n                    console.log(arrPayloadObj)\n                }\n              };\n              FR.readAsArrayBuffer(file);\n            });\n\n            tranid.keyup(() => {\n                $(\"#topic\").val(tranid.val() + \"/diag/status\");\n\n            })\n            \n            \n            btnClear.click(()=>{\n                document.getElementById(\"input\").value=\"\";\n            })\n            \n            \n            btnOptionalConfig.click(()=>{\n                var manualPublish = document.getElementById(\"manualPublish\");\n                var filePublish = document.getElementById(\"result\")\n                if(manualPublish.style.display==\"none\")\n                {\n                    isFilePublish = false\n                    manualPublish.style.display=\"\"\n                    filePublish.style.display=\"none\"\n                }else{\n                    isFilePublish = true\n                    filePublish.style.display=\"\"\n                    manualPublish.style.display=\"none\"\n                }\n                \n            })\n            function removeElementByKey(value,myArray)\n            {\n                myArray=myArray.forEach(function(index, value){ \n                    if(myArray[index] === value){ \n                        myArray.splice(index, 1); \n                    }});\n            }\n            submitId.click(() => {\n                if(topic.val() == '' || invalidPayloadObj.length > 0)\n                {\n                    alert(\"pls valid all value\")\n                }\n                else{\n                    if(isFilePublish)\n                    {\n                        if(inTimeout.val() != '')\n                        {\n                            if(options.val()==0)\n                            {\n                                scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: arrPayloadObjToSend, timeout:inTimeout.val() })\n                                alert(\"success\")\n                                document.getElementById('result').readOnly = true;\n                                document.getElementById('tranid').readOnly = true;\n                                document.getElementById('qos').readOnly = true;\n                            }else{\n                                scope.send({ action:\"disconnect\" })\n                                alert(\"sdfdsf\")\n                                scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: arrPayloadObjToSend, timeout:inTimeout.val() ,action:\"connect\"})\n                                alert(\"success\")\n                                document.getElementById('result').readOnly = true;\n                                document.getElementById('tranid').readOnly = true;\n                                document.getElementById('qos').readOnly = true;\n                            }\n                        }\n                    }else{\n                        var objectPayload = {}\n                        \n                        if(inGpsLatitude.val()!='')\n                        {\n                            objectPayload['gpsLatitude']=parseFloat(inGpsLatitude.val())\n                        \n                        }\n                        if(inGpsLongitude.val()!='')\n                        {\n                            objectPayload['gpsLongitude']=parseFloat(inGpsLongitude.val())\n                        }\n                        if(inTrainConnectionStatus.val()!='')\n                        {\n                            objectPayload['trainConnectionStatus']=parseInt(inTrainConnectionStatus.val())\n                        }\n                        if(inTrainNetworkStatus.val()!='')\n                        {\n                            objectPayload['trainNetworkStatus']=parseInt(inTrainNetworkStatus.val())\n                        }\n                        if(inPrimaryCertChecksum.val()!='')\n                        {\n                            objectPayload['primaryCertChecksum']=inPrimaryCertChecksum.val()\n                        }\n                        if(inSecondaryCertChecksum.val()!='')\n                        {\n                            objectPayload['secondaryCertChecksum']=inSecondaryCertChecksum.val()\n                        }\n                        if(inCertInuse.val()!='')\n                        {\n                            objectPayload['certInUse']=parseInt(inCertInuse.val())\n                        }\n                        if(inSecondaryCertTestResult.val()!='')\n                        {\n                            objectPayload['secondaryCertTestResult']=parseInt(inSecondaryCertTestResult.val())\n                        }\n                        if(inPrimaryCertExpiryDate.val()!='')\n                        {\n                            objectPayload['primaryCertExpiryDate']=parseInt(inPrimaryCertExpiryDate.val())\n                        }\n                        if(parseInt(inHardwareFailures.val()) < 0 || parseInt(inHardwareFailures.val()) > 255 || parseInt(inSoftwareFailures.val()) < 0 || parseInt(inSoftwareFailures.val()) > 255 || parseInt(inStorageUsage.val()) < 0 || parseInt(inStorageUsage.val()) > 100\n                        || parseInt(inCpuUsage.val()) < 0 || parseInt(inCpuUsage.val()) > 100 || parseInt(inRamUsage.val()) < 0 || parseInt(inRamUsage.val()) > 100 || parseInt(inObsHealth.val()) < 0 || parseInt(inObsHealth.val()) > 255 )\n                        {\n                            if(parseInt(inObsHealth.val()) < 0 || parseInt(inObsHealth.val()) > 255 )\n                            {\n                                showInvalidInput(\"inObsHealthError\",\"obsHealth must between 0 and 255\")\n                            }\n                            \n                            if(parseInt(inHardwareFailures.val()) < 0 || parseInt(inHardwareFailures.val()) > 255 )\n                            {\n                                showInvalidInput(\"inHardwareFailuresError\",\"hardwareFailures must between 0 and 255\")\n                            }\n                       \n                            if(parseInt(inSoftwareFailures.val()) < 0 || parseInt(inSoftwareFailures.val()) > 255 )\n                            {\n                                showInvalidInput('inSoftwareFailuresError',\"SoftwareFailures must between 0 and 255\")\n                            }\n                        \n                            if( parseInt(inStorageUsage.val()) < 0 || parseInt(inStorageUsage.val()) > 100)\n                            {\n                                showInvalidInput('inStorageUsageError',\"StorageUsage must between 0 and 100\")\n                            }\n                        \n                            if(parseInt(inCpuUsage.val()) < 0 || parseInt(inCpuUsage.val()) > 100 )\n                            {\n                                showInvalidInput('inCpuUsageError',\"CpuUsage must between 0 and 100\")\n                            }\n                        \n                        \n                            if(parseInt(inRamUsage.val()) < 0 || parseInt(inRamUsage.val()) > 100)\n                            {\n                                showInvalidInput('inRamUsageError',\"RamUsage must between 0 and 100\")\n                            }\n                            \n                        }else{\n                            hideInvalidInput(\"inHardwareFailuresError\")\n                            if(inHardwareFailures.val()!='')\n                            {\n                                objectPayload['hardwareFailures']=parseInt(inHardwareFailures.val())\n                            }\n                            if(inSoftwareFailures.val() != '')\n                            {\n                                objectPayload['softwareFailures']=parseInt(inSoftwareFailures.val())\n                            }\n                            if(inStorageUsage.val()!='')\n                            {\n                                objectPayload['storageUsage']=parseInt(inStorageUsage.val())\n                            }\n                            if(inCpuUsage.val()!='')\n                            {\n                                objectPayload['cpuUsage']=parseInt(inCpuUsage.val())\n                            }\n                            if(inRamUsage.val() != '')\n                            {\n                                objectPayload['ramUsage']=parseInt(inRamUsage.val())\n                            }\n                            if(inObsHealth.val() != '')\n                            {\n                               objectPayload['obsHealth']=parseInt(inObsHealth.val()) \n                            }\n                            // objectPayload['hardwareFailures']=parseInt(inHardwareFailures.val())\n                            hideInvalidInput('inSoftwareFailuresError')\n                            // objectPayload['softwareFailures']=parseInt(inSoftwareFailures.val())\n                            hideInvalidInput('inStorageUsageError')\n                            // objectPayload['storageUsage']=parseInt(inStorageUsage.val())\n                            hideInvalidInput('inCpuUsageError')\n                            // objectPayload['cpuUsage']=parseInt(inCpuUsage.val())\n                            hideInvalidInput('inRamUsageError')\n                            // objectPayload['ramUsage']=parseInt(inRamUsage.val())\n                            hideInvalidInput('inObsHealthError')\n                            // objectPayload['obsHealth']=parseInt(inObsHealth.val())\n                            if(options.val()==0)\n                            {\n                                scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: objectPayload, timeout:null })\n                            }\n                            else\n                            {\n                                 scope.send({ action: \"disconnect\" })\n                                \n                                setTimeout(function(){ \n                                  scope.send({ action: \"connect\" })\n                                }, 1000);\n                                setTimeout(function(){ \n                                 scope.send({ topic: topic.val(), qos: qos.val(), retainFlag: retainFlag.val(), payload: objectPayload, timeout:null })\n                                }, 2000);\n                              \n                            }\n                            \n                            alert(\"success\")\n                            document.getElementById('result').readOnly = true;\n                            document.getElementById('tranid').readOnly = true;\n                            document.getElementById('qos').readOnly = true;\n                        }\n                    }\n                   \n                }\n                \n            })\n        })(scope)\n    </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "bc576fdc98d0114e"
            ]
        ]
    },
    {
        "id": "a57093052c989cd5",
        "type": "ui_template",
        "z": "24235853ed2aee05",
        "group": "b2ff3789a6b68d8f",
        "name": "",
        "order": 1,
        "width": "25",
        "height": "6",
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Employment Verification Form</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\"\n        integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossorigin=\"anonymous\">\n    <style>\n        table {\n            width: 750px;\n            border-collapse: collapse;\n            margin: 50px auto;\n        }\n\n         Zebra striping \n        tr:nth-of-type(odd) {\n            background: #eee;\n        }\n\n        th {\n            background: #212529;\n            color: white;\n            font-weight: bold;\n        }\n\n        td,\n        th {\n            padding: 10px;\n            border: 1px solid #ccc;\n            text-align: left;\n            font-size: 18px;\n        }\n\n         \nMax width before this PARTICULAR table gets nasty\nThis query will take effect for any screen smaller than 760px\nand also iPads specifically.\n\n        @media only screen and (max-width: 760px),\n        (min-device-width: 768px) and (max-device-width: 1024px) {\n\n            table {\n                width: 100%;\n            }\n\n             Force table to not be like tables anymore \n            table,\n            thead,\n            tbody,\n            th,\n            td,\n            tr {\n                display: block;\n            }\n\n             Hide table headers (but not display: none;, for accessibility) \n            thead tr {\n                position: absolute;\n                top: -9999px;\n                left: -9999px;\n            }\n\n            tr {\n                border: 1px solid #ccc;\n            }\n\n            td {\n                 Behave  like a \"row\" \n                border: none;\n                border-bottom: 1px solid #eee;\n                position: relative;\n                padding-left: 50%;\n            }\n\n            td:before {\n                 Now like a table header \n                position: absolute;\n                 Top/left values mimic padding \n                top: 6px;\n                left: 6px;\n                width: 45%;\n                padding-right: 10px;\n                white-space: nowrap;\n                 Label the data \n                content: attr(data-column);\n\n                color: #000;\n                font-weight: bold;\n            }\n\n        }\n    </style>\n</head>\n\n<body>\n    <div style=\"margin-left:250px\">\n        <h3 style=\"text-align: left;text-transform: capitalize;\">Message publish to topic diag/status</h3>\n        <table id=\"table\" style=\"margin-right:250px;width:85%\">\n            <thead style=\"background: #212529\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">ts</th>\n                    <th scope=\"col\">obsHealth</th>\n                    <th scope=\"col\">hardwareFailures</th>\n                    <th scope=\"col\">softwareFailures</th>\n                    <th scope=\"col\">gpsLatitude</th>\n                    <th scope=\"col\">gpsLongitude</th>\n                    <th scope=\"col\">trainConnectionStatus</th>\n                    <th scope=\"col\">trainNetworkStatus</th>\n                    <th scope=\"col\">storageUsage</th>\n                    <th scope=\"col\">cpuUsage</th>\n                    <th scope=\"col\">ramUsage</th>\n                    <th scope=\"col\">primaryCertChecksum</th>\n                    <th scope=\"col\">secondaryCertChecksum</th>\n                    <th scope=\"col\">certInUse</th>\n                    <th scope=\"col\">secondaryCertTestResult</th>\n                    <th scope=\"col\">primaryCertExpiryDate</th>\n                </tr>\n            </thead>\n            <tbody id=\"bodyResult\">\n               <tr>\n                    <td>1</td>\n                    <td>{{msg.DiagnosticData.ts}}</td>\n                    <td>{{msg.DiagnosticData.obsHealth}}</td>\n                    <td>{{msg.DiagnosticData.hardwareFailures}}</td>\n                    <td>{{msg.DiagnosticData.softwareFailures}}</td>\n                    <td>{{msg.DiagnosticData.gpsLatitude}}</td>\n                    <td>{{msg.DiagnosticData.gpsLongitude}}</td>\n                    <td>{{msg.DiagnosticData.trainConnectionStatus}}</td>\n                    <td>{{msg.DiagnosticData.trainNetworkStatus}}</td>\n                    <td>{{msg.DiagnosticData.storageUsage}}</td>\n                    <td>{{msg.DiagnosticData.cpuUsage}}</td>\n                    <td>{{msg.DiagnosticData.ramUsage}}</td>\n                    <td>{{msg.DiagnosticData.primaryCertChecksum}}</td>\n                    <td>{{msg.DiagnosticData.secondaryCertChecksum}}</td>\n                    <td>{{msg.DiagnosticData.certInUse}}</td>\n                    <td>{{msg.DiagnosticData.secondaryCertTestResult}}</td>\n                    <td>{{msg.DiagnosticData.primaryCertExpiryDate}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 980,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "bc576fdc98d0114e",
        "type": "function",
        "z": "24235853ed2aee05",
        "name": "",
        "func": "var arrPayloadObject = msg.payload\nvar Count = arrPayloadObject.length\nvar i=0;\nif(msg.action == \"disconnect\")\n{\n    node.send(msg)\n}else{\n\n\n\nfunction test()\n{\n    node.warn(Count)\n    if(i<Count)\n    {\n        \n        setTimeout(function(){\n            var myDate= new Date()\n            var curDate=myDate.getFullYear() + '-' \n            +('0' + (myDate.getMonth()+1)).slice(-2)+ '-' \n            +  ('0' + myDate.getDate()).slice(-2) + ' '+myDate.getHours()\n            + ':'+('0' + (myDate.getMinutes())).slice(-2)+ ':'+myDate.getSeconds()    \n            var tsObj={ts:curDate}\n            var payload=Object.assign(tsObj,arrPayloadObject[i]);\n            msg['payload'] = payload;\n            msg.DiagnosticData=payload;\n            msg['topic']=msg.topic\n            node.send(msg);\n            i++;\n            test()\n        }, msg.timeout) \n    }\n}\nif(msg.timeout!=null)\n{\n    test()\n}else{\n    node.warn(\"sdfasdfasdfsdafsd\")\n    var myDate= new Date()\n    var curDate=myDate.getFullYear() + '-' \n    +('0' + (myDate.getMonth()+1)).slice(-2)+ '-' \n    +  ('0' + myDate.getDate()).slice(-2) + ' '+myDate.getHours()\n    + ':'+('0' + (myDate.getMinutes())).slice(-2)+ ':'+myDate.getSeconds()    \n    var tsObj={ts:curDate}\n    var payload=Object.assign(tsObj,arrPayloadObject);\n    msg['payload'] = payload;\n    msg.DiagnosticData=payload;\n    msg['topic']=msg.topic\n    node.send(msg);\n}\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 340,
        "wires": [
            [
                "97cb5d28cc9ce10e",
                "a57093052c989cd5",
                "f50973eee931f4a4"
            ]
        ]
    },
    {
        "id": "97cb5d28cc9ce10e",
        "type": "mqtt out",
        "z": "24235853ed2aee05",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6e2ca8ae.a41228",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "f50973eee931f4a4",
        "type": "debug",
        "z": "24235853ed2aee05",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "f05524d9a0117c9c",
        "type": "inject",
        "z": "24235853ed2aee05",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "disconnect",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 610,
        "y": 560,
        "wires": [
            [
                "c1a65e4b14a73b8d"
            ]
        ]
    },
    {
        "id": "c1a65e4b14a73b8d",
        "type": "mqtt in",
        "z": "24235853ed2aee05",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "6e2ca8ae.a41228",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 790,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "3fa077bb75ee08c4",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "d2ba13584b083b3d",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "b2ff3789a6b68d8f",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "d2ba13584b083b3d",
        "order": 2,
        "disp": false,
        "width": "35",
        "collapse": false
    },
    {
        "id": "6e2ca8ae.a41228",
        "type": "mqtt-broker",
        "name": "",
        "broker": "${MQTT_SERVER}",
        "port": "${MQTT_PORT}",
        "clientid": "${MQTT_CLIENTID}",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": false,
        "birthTopic": "aemr_810001/disconnect",
        "birthQos": "2",
        "birthRetain": "false",
        "birthPayload": "connect",
        "birthMsg": {},
        "closeTopic": "aemr_810001/disconnect",
        "closeQos": "2",
        "closeRetain": "false",
        "closePayload": "disconnect",
        "closeMsg": {},
        "willTopic": "aemr_810001/disconnect",
        "willQos": "2",
        "willRetain": "false",
        "willPayload": "unexpected disconnection",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d2ba13584b083b3d",
        "type": "ui_tab",
        "name": "3.4.4 OBS - Internal Diagnostic Data",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]